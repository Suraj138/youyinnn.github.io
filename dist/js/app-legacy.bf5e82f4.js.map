{"version":3,"file":"js/app-legacy.bf5e82f4.js","mappings":"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","sources":["webpack://youyinnn.github.io/./src/assets/resources/cache-tp77vm.js","webpack://youyinnn.github.io/./src/assets/resources/code-theme-css-ef37e5d9.js","webpack://youyinnn.github.io/./src/assets/resources/resources.js","webpack://youyinnn.github.io/./src/App.vue","webpack://youyinnn.github.io/./src/components/TopBar.vue","webpack://youyinnn.github.io/./src/components/TopBar.vue?6b84","webpack://youyinnn.github.io/./src/App.vue?912b","webpack://youyinnn.github.io/external var \"VueRouter\"","webpack://youyinnn.github.io/./src/router/index.js","webpack://youyinnn.github.io/external var \"Vuex\"","webpack://youyinnn.github.io/./src/store/index.js","webpack://youyinnn.github.io/./src/main.js","webpack://youyinnn.github.io//Users/yinnnyou/workspace/youyinnn.github.io/src/assets/resources|sync|/^\\.\\/.*$/","webpack://youyinnn.github.io/external var \"Vue\"","webpack://youyinnn.github.io/webpack/bootstrap","webpack://youyinnn.github.io/webpack/runtime/chunk loaded","webpack://youyinnn.github.io/webpack/runtime/compat get default export","webpack://youyinnn.github.io/webpack/runtime/define property getters","webpack://youyinnn.github.io/webpack/runtime/ensure chunk","webpack://youyinnn.github.io/webpack/runtime/get javascript chunk filename","webpack://youyinnn.github.io/webpack/runtime/get mini-css chunk filename","webpack://youyinnn.github.io/webpack/runtime/global","webpack://youyinnn.github.io/webpack/runtime/hasOwnProperty shorthand","webpack://youyinnn.github.io/webpack/runtime/load script","webpack://youyinnn.github.io/webpack/runtime/make namespace object","webpack://youyinnn.github.io/webpack/runtime/publicPath","webpack://youyinnn.github.io/webpack/runtime/css loading","webpack://youyinnn.github.io/webpack/runtime/jsonp chunk loading","webpack://youyinnn.github.io/webpack/startup"],"sourcesContent":["\n    sessionStorage.setItem('postSeries', \"[{\\\"se\\\":\\\"Cron4jDocument_ZH_CN_Translation\\\",\\\"ps\\\":[\\\"Cron4jDocument_ZH_CN_Translation_README===19jo7o1===1525713121000\\\",\\\"Cron4jDocument_ZH_CN_Translation===1ngl1pm===1525713901000\\\"]},{\\\"se\\\":\\\"docker\\\",\\\"ps\\\":[\\\"Docker Orientation&Setup===1ei198o===1542203411000\\\",\\\"Docker Containers&Dockerfile===uh480l===1542380711000\\\",\\\"Docker Service&Composefile===zkr55u===1543321142000\\\",\\\"Docker Swarm&ClusterSetup===1toixsk===1543439163000\\\",\\\"Docker Stack===u7sd0w===1543509960000\\\",\\\"Docker ConceptReview===rx7jt4===1543754349000\\\",\\\"Docker Persist Data Overview===lt42s8===1543916673000\\\",\\\"Docker Volumes===1ae6lng===1544005389000\\\"]},{\\\"se\\\":\\\"electron\\\",\\\"ps\\\":[\\\"Electron_一个HelloWorld===a08lib===1511388323000\\\",\\\"Electron_打包你的HelloWorld为exe===1q1lo3l===1511442141000\\\",\\\"Electron_上手铺垫===11zuc81===1570142121000\\\",\\\"Electron_配置相关与对象===1y7ozg8===1570698201000\\\",\\\"Electron_UI===kimeni===1570707861000\\\"]},{\\\"se\\\":\\\"express\\\",\\\"ps\\\":[\\\"Express Routing===1n8vn13===1570109880000\\\",\\\"Express Middleware===1tzsbbu===1570120260000\\\"]},{\\\"se\\\":\\\"Interesting Math\\\",\\\"ps\\\":[\\\"Interesting Math - Prime Number===1jy4sem===1587026619000\\\"]},{\\\"se\\\":\\\"并发\\\",\\\"ps\\\":[\\\"Java并发编程第一坎===bu9klx===1528236540000\\\",\\\"Java并发编程第二坎===1clnpuk===1531652002000\\\",\\\"Java并发编程第三坎===1h1ww1y===1531923322000\\\",\\\"Java并发编程第四坎===db3vx3===1531923408000\\\",\\\"Java并发编程第五坎===1xo3tpx===1532201628000\\\",\\\"Java并发编程第六坎===139027a===1532554428000\\\",\\\"Java并发编程第七坎===7kdfk8===1545776568000\\\",\\\"Java并发编程第七坎-2===u4sgci===1546174728000\\\",\\\"Java并发编程第八坎===1u7rv30===1546901208000\\\"]},{\\\"se\\\":\\\"jenkins\\\",\\\"ps\\\":[\\\"Jenkins Introductions&Setup===1arzjog===1542639060000\\\"]},{\\\"se\\\":\\\"JettyDocument_ZH_CN_Translation\\\",\\\"ps\\\":[\\\"JettyDocument_ZH_CN_Translation_README===n8gsoq===1525714201000\\\",\\\"JettyDocument_ZH_CN_Translation_Part4-23===1cei7aq===1525714201000\\\",\\\"JettyDocument_ZH_CN_Translation_Part4-21===18rke1===1525714201000\\\",\\\"JettyDocument_ZH_CN_Translation_Part3-13===cc3kmk===1525714201000\\\",\\\"JettyDocument_ZH_CN_Translation_Part1===17hjlts===1525714201000\\\"]},{\\\"se\\\":\\\"leetcode\\\",\\\"ps\\\":[\\\"Leetcode-1~5===pn2ezr===1549137060000\\\",\\\"Leetcode-6~10===t1f0vq===1550409480000\\\",\\\"Leetcode-11~15===2gps3g===1551303720000\\\",\\\"Leetcode-16~20===3yl2hx===1551903180000\\\",\\\"Leetcode-21~25===1hrw4sv===1551907020000\\\",\\\"Leetcode-26~30===448jer===1552148460000\\\",\\\"Leetcode-31~35===dbne5d===1552772760000\\\",\\\"Leetcode-36~40===v6ei19===1553111160000\\\",\\\"Leetcode-41~45===11z93zc===1553112180000\\\",\\\"Leetcode-46~50===jywoys===1553672340000\\\",\\\"Leetcode-51~55===xmbex2===1553914620000\\\",\\\"Leetcode-56~60===1kv61wq===1553951760000\\\",\\\"Leetcode-61~65===1cu6q2d===1554185880000\\\",\\\"Leetcode-66~70===z9pvg9===1554216000000\\\",\\\"Leetcode-71~75===i9becb===1554363300000\\\"]},{\\\"se\\\":\\\"Log4j2\\\",\\\"ps\\\":[\\\"Log4j2_HelloWorld===en4hhw===1510935201000\\\",\\\"Log4j2_Appenders===nff3ic===1510936638000\\\",\\\"Log4j2_Layouts===yvgzwi===1512743956000\\\",\\\"Log4j2_Filters===3fjm8j===1512823280000\\\",\\\"Log4j2_Lookups===3zxt7z===1512833295000\\\"]},{\\\"se\\\":\\\"《MySQL技术内幕：InnoDB存储引擎》笔记\\\",\\\"ps\\\":[\\\"MySQL InnoDB引擎概述===xfjqry===1591902734000\\\",\\\"MySQL InnoDB索引概述===a0p0f4===1592157644000\\\",\\\"MySQL InnoDB事务概述===tx6g0p===1592318726000\\\",\\\"MySQL InnoDB锁概述===dc5shg===1592402935000\\\"]},{\\\"se\\\":\\\"Python Note\\\",\\\"ps\\\":[\\\"The Basic Grammar Of Python (AB)===t3owl3===1588971615000\\\",\\\"The Basic Grammar Of Python (CD)===1ba9tuk===1589120354000\\\",\\\"The Basic Grammar Of Python (EF)===1xentt===1589728247000\\\",\\\"Python - Threading===2acnhf===1590005083000\\\"]},{\\\"se\\\":\\\"《Mastering Regular Expression(Third Edition)》\\\",\\\"ps\\\":[\\\"RegExp_1_overview===1k4djcz===1510876856000\\\",\\\"RegExp_2_metacharacters===huiysg===1510876926000\\\"]},{\\\"se\\\":\\\"从头到尾读\\\",\\\"ps\\\":[\\\"从头到尾读Collection===faxga5===1526404646000\\\",\\\"从头到尾读Iterable与Iterator===1kakozs===1526404934000\\\",\\\"从头到尾读ArrayList===rku8jh===1528187481000\\\",\\\"把HashMap安排得明明白白===ofa68o===1534421541000\\\"]},{\\\"se\\\":\\\"JVM\\\",\\\"ps\\\":[\\\"关于JVM的运行时数据区===rikltc===1527979680000\\\",\\\"关于JVM的对象创建与访问===18669ga===1542231900000\\\",\\\"关于JVM的运行时数据区上的GC===d5ykz8===1542235500000\\\",\\\"关于JVM的GC行为和内存分配===jhpq7e===1542468900000\\\"]},{\\\"se\\\":\\\"深入MySQL亿点点\\\",\\\"ps\\\":[\\\"再聊InnoDB索引===1lvzuh7===1592842893000\\\"]},{\\\"se\\\":\\\"《计算机网络》\\\",\\\"ps\\\":[\\\"计算机网络-谢希仁-1===1k7g0p3===1530354513000\\\",\\\"计算机网络-谢希仁-2===1nz333d===1530650673000\\\"]}]\");\n    sessionStorage.setItem('postMetadata', \"[{\\\"title\\\":\\\"Connecting ModelSIM with Vscode & XQuartz on Mac\\\",\\\"categories\\\":[\\\"concordia\\\",\\\"coen6501\\\"],\\\"tags\\\":[\\\"nottag\\\"],\\\"date\\\":\\\"2021-10-5 19:22:5\\\",\\\"char_count\\\":1829,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n### XQuartz setup\\\\n\\\\nhttps://www.xquartz.org/\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"xqh6xg\\\"},{\\\"title\\\":\\\"了解前缀树\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"searching\\\"],\\\"tags\\\":[\\\"trie\\\",\\\"leetcode\\\"],\\\"date\\\":\\\"2020-07-14T11:39:55.000Z\\\",\\\"char_count\\\":11987,\\\"short_content\\\":\\\"\\\\n\\\\n本篇主要介绍一个用于字符串前后缀快速搜索的数据结构——前缀树，这篇也是在 Leetcode 里的一个数据结构[专题](https://leetcode-cn.com/explore/learn/card/trie/)，专题里已经把前缀树的实现方式以及实际应用都介绍了一下，这里稍微整理一下这个专题\\\\n\\\\n关于前缀树的概念，可以参考：[什么是前缀树？](https://leetcode-cn.com/explore/learn/card/trie/165/introduction-to-trie/641/)\\\\n\\\\n关于前缀树的表示，可以参考：[如何表示一个前缀树？](https://leetcode-cn.com/explore/learn/card/trie/165/introduction-to-trie/642/)\\\\n\\\\n我们一般使用数组的方式去表示前缀树，虽然它会多占用一些空间，但是在查找的执行效率上，要比 HashMap 快上不少\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"ooqfkn\\\"},{\\\"title\\\":\\\"带状态机的DP\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"dp\\\"],\\\"tags\\\":[\\\"dp\\\"],\\\"date\\\":\\\"2020-07-10T11:51:57.000Z\\\",\\\"char_count\\\":10071,\\\"short_content\\\":\\\"\\\\n\\\\n前几天碰到一套经典的题，《买卖股票》系列，其中最简单那道题我之前还在字节碰到过，然而当时我菜得连最简单的题都没做出来\\\\n\\\\n这个系列从简到难思路变化还挺大，但有趣的是中等难度之后的题开始涉及到状态机的思路，我觉得可以整理一下\\\\n\\\\n本篇所有的思路都是整理自**官方题解**以及[liweiwei1419](https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iii/solution/dong-tai-gui-hua-by-liweiwei1419-7/)同学的思路\\\\n\\\\n### Ⅰ\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"f40uwq\\\"},{\\\"title\\\":\\\"再聊InnoDB索引\\\",\\\"categories\\\":[\\\"db\\\",\\\"mysql\\\",\\\"index\\\"],\\\"tags\\\":[\\\"mysql-index\\\",\\\"mys\\\"],\\\"series\\\":\\\"深入MySQL亿点点\\\",\\\"date\\\":\\\"2020-06-22T16:21:33.000Z\\\",\\\"char_count\\\":28428,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n本篇主要是再来聊聊MySQL中InnoDB的索引的细节，主要聊到引擎是如何利用B+树去检索数据的\\\\n\\\\n以及整理一些关于索引的问题与回答，所以本篇的形式还是以问题点为驱动，回答一个个的问题\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1lvzuh7\\\"},{\\\"title\\\":\\\"MySQL InnoDB锁概述\\\",\\\"categories\\\":[\\\"db\\\",\\\"mysql\\\",\\\"lock\\\"],\\\"tags\\\":[\\\"mysql-lock\\\"],\\\"series\\\":\\\"《MySQL技术内幕：InnoDB存储引擎》笔记\\\",\\\"date\\\":\\\"2020-6-17 10:8:55\\\",\\\"char_count\\\":6072,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### 概述\\\\n\\\\n本篇主要介绍InnoDB中的锁，以及它与隔离级别之间的关系。从锁的算法、锁的等级、锁解决的问题来为MySQL的InnoDB锁做一个概述\\\\n\\\\n我们能够轻易地想到，对数据库的数据进行操作的时候，为了保证数据一致性和持久性，我们会对这些操作上锁，但数据库中并不只有这些情况会上锁，其他地方也会有锁，比如缓冲池中页的增删改查的时候\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"dc5shg\\\"},{\\\"title\\\":\\\"MySQL InnoDB事务概述\\\",\\\"categories\\\":[\\\"db\\\",\\\"mysql\\\",\\\"transaction\\\"],\\\"tags\\\":[\\\"db-transaction\\\",\\\"mvcc\\\"],\\\"series\\\":\\\"《MySQL技术内幕：InnoDB存储引擎》笔记\\\",\\\"date\\\":\\\"2020-06-16T14:45:26.000Z\\\",\\\"char_count\\\":4963,\\\"short_content\\\":\\\"\\\\n\\\\n本篇介绍内容：\\\\n\\\\n- 数据库系统中事务的相关概念；\\\\n- SQL 隔离级别要解决的问题；\\\\n- InnoDB 中的隔离级别；\\\\n- InnoDB 支持什么样的事务以及如何支持事务；\\\\n\\\\n### 事务相关概述\\\\n\\\",\\\"abbrlink\\\":\\\"tx6g0p\\\"},{\\\"title\\\":\\\"MySQL InnoDB索引概述\\\",\\\"categories\\\":[\\\"db\\\",\\\"mysql\\\",\\\"index\\\"],\\\"tags\\\":[\\\"mysql\\\",\\\"mysql-index\\\"],\\\"series\\\":\\\"《MySQL技术内幕：InnoDB存储引擎》笔记\\\",\\\"date\\\":\\\"2020-6-14 14:0:44\\\",\\\"char_count\\\":11756,\\\"short_content\\\":\\\"\\\\n\\\\n本篇开始了解 MySQL 中 InnoDB 引擎的索引，索引是 MySQL 里非常重要的部分，它的出现极大地提升了 MySQL 处理数据的性能，而且索引使用的好坏也决定着一个系统的执行效率\\\\n\\\\n因此，想要高效地使用 MySQL 数据库，合理地创建索引，甚至是合理地编写 SQL 语句，都需要先了解索引在 MySQL 中的行为以及原理\\\\n\\\\nInnoDB 的索引常见的有：B+树索引、全文索引、哈希索引\\\\n\\\\n之前我们说过哈希索引，它是引擎自适应的，所以我们并不需要关心该索引的管理；而 B+树索引是引擎使用地最多的索引数据结构，其构造类似于二叉树，根据键值快速找到数据，但是要理解它我们要注意两个问题：\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"a0p0f4\\\"},{\\\"title\\\":\\\"优先队列&二叉堆（2-heap）\\\",\\\"categories\\\":[\\\"data structures\\\",\\\"heap\\\"],\\\"tags\\\":[\\\"queue\\\",\\\"priority-queue\\\",\\\"heap\\\",\\\"2-heap\\\"],\\\"date\\\":\\\"2020-6-13 12:8:2\\\",\\\"char_count\\\":6465,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### Introduction\\\\n\\\\n在排序算法中有堆排序，而要理解好堆排序，首先我们得先理解好堆的概念，一般在数据结构上，我们把优先队列的数据结构称为堆，那什么是有限队列呢？它能应用在哪些场景呢？这些是本篇要介绍的重点\\\\n\\\\n\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"2t44ld\\\"},{\\\"title\\\":\\\"MySQL InnoDB引擎概述\\\",\\\"categories\\\":[\\\"db\\\",\\\"mysql\\\",\\\"engines\\\"],\\\"tags\\\":[\\\"mysql-engins\\\",\\\"innodb\\\"],\\\"series\\\":\\\"《MySQL技术内幕：InnoDB存储引擎》笔记\\\",\\\"date\\\":\\\"2020-06-11T19:12:14.000Z\\\",\\\"char_count\\\":6746,\\\"short_content\\\":\\\"\\\\n\\\\n### 介绍\\\\n\\\\n本篇主要介绍了 MySQL 系统的核心引擎之一：**_InnoDB_**，本系列所有的内容是基于姜承尧老师所著*《MySQL 技术内幕：InnoDB 存储引擎》*再加上整理的网络笔记、MySQL5.7 的[官方文档](https://dev.mysql.com/doc/refman/5.7/en/)和自己的一些理解\\\\n\\\\n### InnoDB 引擎\\\\n\\\\nMySQL5.5.8 以后的默认引擎，支持事务、行锁设计、外键、全文索引、非锁定读（默认读操作不会产生锁）；\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"xfjqry\\\"},{\\\"title\\\":\\\"Python - Threading\\\",\\\"categories\\\":[\\\"python\\\",\\\"concurrency\\\"],\\\"tags\\\":[\\\"python\\\",\\\"thread\\\"],\\\"series\\\":\\\"Python Note\\\",\\\"date\\\":\\\"2020-5-20 16:4:43\\\",\\\"char_count\\\":17088,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nIntroduce how to use multi-thread tech with python, refer to: https://docs.python.org/3/library/threading.html\\\\n\\\\n### Lib - threading\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"2acnhf\\\"},{\\\"title\\\":\\\"The Basic Grammar Of Python (EF)\\\",\\\"categories\\\":[\\\"python\\\",\\\"grammar\\\"],\\\"tags\\\":[\\\"python\\\",\\\"grammar\\\"],\\\"series\\\":\\\"Python Note\\\",\\\"date\\\":\\\"2020-05-17T15:10:47.000Z\\\",\\\"char_count\\\":25166,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nData Structures, Classes and Errors & Exceptions.\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1xentt\\\"},{\\\"title\\\":\\\"The Basic Grammar Of Python (CD)\\\",\\\"categories\\\":[\\\"python\\\",\\\"grammar\\\"],\\\"tags\\\":[\\\"python\\\",\\\"grammar\\\"],\\\"series\\\":\\\"Python Note\\\",\\\"date\\\":\\\"2020-05-10T14:19:14.000Z\\\",\\\"char_count\\\":15622,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\nFlow control syntax, Function definition, Modules.\\\\n\\\\n## C\\\\n\\\\n### Flow Control\\\\n#### `if` statement\\\\n\\\",\\\"abbrlink\\\":\\\"1ba9tuk\\\"},{\\\"title\\\":\\\"The Basic Grammar Of Python (AB)\\\",\\\"categories\\\":[\\\"python\\\",\\\"grammar\\\"],\\\"tags\\\":[\\\"python\\\",\\\"grammar\\\"],\\\"series\\\":\\\"Python Note\\\",\\\"date\\\":\\\"2020-5-8 17:0:15\\\",\\\"char_count\\\":15915,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\nThe series of \\\\\\\\<Python Note\\\\\\\\> is talking about some basic grammar rules of python, for quick search while I might use python.\\\\n\\\\nThe first article will introduces  `print()` and `input()`, the comment syntax, variables assignment and some basic types in python.\\\\n\\\\n## A\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"t3owl3\\\"},{\\\"title\\\":\\\"Make Your Raspberry Pi Broadcasting TV News Every Morning\\\",\\\"categories\\\":[\\\"essay\\\"],\\\"tags\\\":[\\\"raspberry pi\\\"],\\\"date\\\":\\\"2020-04-23T22:46:59.000Z\\\",\\\"char_count\\\":7544,\\\"short_content\\\":\\\"\\\\n\\\\n### Preface\\\\n\\\\nI can't get up early recently, and yesterday I suddenly thought about why can't I use my idle raspberry pi to broadcast TV news every 7:00 a.m and wake me up?\\\\n\\\\nAnd how am I going to achieve that? There are some factors I should count in:\\\\n\\\\n- a cron to set timing task at 7:00 a.m;\\\\n- tools to control the mouse action;\\\\n\\\",\\\"abbrlink\\\":\\\"1xemds8\\\"},{\\\"title\\\":\\\"Interesting Math - Prime Number\\\",\\\"categories\\\":[\\\"mathematics\\\"],\\\"tags\\\":[\\\"prime\\\",\\\"math\\\"],\\\"series\\\":\\\"Interesting Math\\\",\\\"date\\\":\\\"2020-04-16T08:43:39.000Z\\\",\\\"char_count\\\":13058,\\\"short_content\\\":\\\"\\\\n\\\\n### Preface\\\\n\\\\nPrime number is important for computer science, especially in cryptography such as [public-key cryptography](https://en.wikipedia.org/wiki/Public-key_cryptography), which relies on the difficulty of [factoring](https://en.wikipedia.org/wiki/Integer_factorization) large numbers into their prime factors.\\\\n\\\\nSo I planed to summarize some concepts and algorithm of prime number.\\\\n\\\\n### Basic Concepts\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1jy4sem\\\"},{\\\"title\\\":\\\"微信小程序支付后台接入\\\",\\\"categories\\\":[\\\"note\\\",\\\"project\\\"],\\\"tags\\\":[\\\"wechat\\\"],\\\"date\\\":\\\"2020-04-02T13:51:57.000Z\\\",\\\"char_count\\\":6211,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### 前言\\\\n\\\\n2月份的时候，疫情原因，学校实验室和学院要开发一款帮助小区居民批量采购的小程序，实验室团队人手不足，说是少后台开发，所以我就上了，看着微信的文档还有学长的帮助，也就吭哧吭哧写上线了\\\\n\\\\n### 操作流程\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1csh4qm\\\"},{\\\"title\\\":\\\"一次博客的改版和升级\\\",\\\"categories\\\":[\\\"essay\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2020-03-13T11:23:00.000Z\\\",\\\"tags\\\":[\\\"blog\\\"],\\\"char_count\\\":8691,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### 前提\\\\n\\\\n当年玩上博客的时候，整过很多活儿，什么Hexo，WP甚至Jekyll都来了，还搭到服务器上用nginx，然后各种域名、备案、CNAME各种乱搞\\\\n\\\\n后面累了，不想折腾了，直接挂github pages，然后就还是用hexo\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"3rmqph\\\"},{\\\"title\\\":\\\"字符编码笔记\\\",\\\"categories\\\":[\\\"reprinted\\\"],\\\"tags\\\":[\\\"encoding\\\"],\\\"date\\\":\\\"2020-02-14T19:34:01.000Z\\\",\\\"char_count\\\":21763,\\\"short_content\\\":\\\"\\\\r\\\\n\\\\r\\\\n> 转自：[yaoxuannn-字符编码笔记](https://yaoxuannn.com/2017/12/12/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E7%AC%94%E8%AE%B0/)\\\\r\\\\n\\\\r\\\\n想来想去终于决定写一个关于计算机字符编码的笔记了( 应该说终于愿意去学了..(๑•ᴗ•๑)), 原本的目的只是搞清楚Unicode的, 考虑到字符编码问题是一个有趣, 在开发中经常会遇到并且稍微有点麻烦和棘手的问题, 但是在网络上却很难找到将这个说的比较细致和成体系的文章, 所以我决定倾尽精力去写这篇笔记, 我会尽量的去查资料和参考他人的文章和博客, 将关于计算机编码的问题捣鼓清楚.\\\\r\\\\n\\\\r\\\\n在笔记的后半部分, 我也会针对Python3的Unicode做一些说明, 并且当说到Unicode的时候, 我会尝试说明一些关于UTF-8 with BOM在Linux/Unix内核中的一些矛盾.\\\\r\\\\n\\\\r\\\\n**关于我搜寻和参考的资料, 都会贴在文章的最后.**\\\\r\\\\n\\\\r\\\\n\\\",\\\"abbrlink\\\":\\\"1w60zyo\\\"},{\\\"title\\\":\\\"Electron_UI\\\",\\\"categories\\\":[\\\"front-end\\\",\\\"electron\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"electron\\\"],\\\"series\\\":\\\"electron\\\",\\\"date\\\":\\\"2019-10-10T11:44:21.000Z\\\",\\\"char_count\\\":6470,\\\"short_content\\\":\\\"\\\\n\\\\n### 对话框\\\\n\\\\n> 显示用于打开和保存文件、警报等的本机系统对话框。\\\\n\\\\n线程：[主线程](https://electronjs.org/docs/glossary#main-process)\\\\n\\\\n显示用于选择多个文件和目录的对话框的示例:\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"kimeni\\\"},{\\\"title\\\":\\\"Electron_配置相关与对象\\\",\\\"categories\\\":[\\\"front-end\\\",\\\"electron\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"electron\\\"],\\\"series\\\":\\\"electron\\\",\\\"date\\\":\\\"2019-10-10T09:03:21.000Z\\\",\\\"char_count\\\":19831,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### Introduction\\\\n\\\\n有了一些铺垫之后，我们就能开始了解一下Electron的主体功能都提供了什么东西，具体的列表可以看：https://electronjs.org/docs/api\\\\n\\\\n- 配置相关与对象\\\\n  - app：整个应用程序生命周期相关的api和事件\\\\n\\\",\\\"abbrlink\\\":\\\"1y7ozg8\\\"},{\\\"title\\\":\\\"Electron_上手铺垫\\\",\\\"categories\\\":[\\\"front-end\\\",\\\"electron\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"electron\\\"],\\\"series\\\":\\\"electron\\\",\\\"date\\\":\\\"2019-10-03T22:35:21.000Z\\\",\\\"char_count\\\":7274,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n## Introduction\\\\n\\\\n官方指南不叫指南，叫document，于是乎开始无教程纯瞎子摸石头，于是想着把整个官方指南都看一遍，然后梳理梳理。\\\\n\\\\n- 关于electron的命名空间\\\\n- 主进程和渲染进程\\\\n\\\",\\\"abbrlink\\\":\\\"11zuc81\\\"},{\\\"title\\\":\\\"Express Middleware\\\",\\\"categories\\\":[\\\"front-end\\\",\\\"nodejs\\\"],\\\"tags\\\":[\\\"express\\\",\\\"nodejs\\\"],\\\"series\\\":\\\"express\\\",\\\"date\\\":\\\"2019-10-03T16:31:00.000Z\\\",\\\"char_count\\\":2372,\\\"short_content\\\":\\\"\\\\n\\\\n{% cq %}\\\\n\\\\n翻译自官方文档\\\\n\\\\n{% endcq %}\\\\n\\\\n## Writing Middleware\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1tzsbbu\\\"},{\\\"title\\\":\\\"Express Routing\\\",\\\"categories\\\":[\\\"front-end\\\",\\\"nodejs\\\",\\\"express\\\"],\\\"tags\\\":[\\\"express\\\",\\\"nodejs\\\"],\\\"series\\\":\\\"express\\\",\\\"date\\\":\\\"2019-10-03T13:38:00.000Z\\\",\\\"char_count\\\":8714,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n{% cq %}\\\\n\\\\n翻译自官方文档\\\\n\\\\n{% endcq %}\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1n8vn13\\\"},{\\\"title\\\":\\\"Understanding the nodejs' event loop\\\",\\\"categories\\\":[\\\"reprinted\\\"],\\\"tags\\\":[\\\"nodejs\\\"],\\\"date\\\":\\\"2019-10-02T15:47:20.000Z\\\",\\\"char_count\\\":6700,\\\"short_content\\\":\\\"\\\\n\\\\n> 转载自：http://blog.mixu.net/2011/02/01/understanding-the-node-js-event-loop/\\\\n\\\\n### Understanding the nodejs' event loop\\\\n\\\\nThe first basic thesis of node.js is that I/O is expensive:\\\\n\\\\n\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1w97yet\\\"},{\\\"title\\\":\\\"GC Algorithm Implementation\\\",\\\"categories\\\":[\\\"java\\\",\\\"jvm\\\",\\\"gc\\\"],\\\"tags\\\":[\\\"gc\\\",\\\"gc-algorithm\\\"],\\\"date\\\":\\\"2019-04-05T05:11:00.000Z\\\",\\\"char_count\\\":16053,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### Introduction\\\\n\\\\n前面说了挺多关于GC的算法思路，接下来这篇说说在JVM里实际实现的GC算法，翻译、参考自[plumbr.io](https://plumbr.io/handbook/garbage-collection-algorithms-implementations)\\\\n\\\\n我们首先要清楚地认识到一个事情：除了G1回收器以外，垃圾回收算法分为**“针对新生代”**，**“针对老年代”**两种\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1jvfs4t\\\"},{\\\"title\\\":\\\"Leetcode-71~75\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"leetcode\\\"],\\\"tags\\\":[\\\"leetcode\\\",\\\"mysqrt\\\",\\\"binary-question\\\"],\\\"date\\\":\\\"2019-04-04T07:35:00.000Z\\\",\\\"series\\\":\\\"leetcode\\\",\\\"char_count\\\":8871,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### 71. SimplifyPath(Medium)\\\\n\\\\nGiven an **absolute path** for a file (Unix-style), simplify it. Or in other words, convert it to the **canonical path**.\\\\n\\\\nIn a UNIX-style file system, a period `.` refers to the current directory. Furthermore, a double period `..` moves the directory up a level. For more information, see: [Absolute path vs relative path in Linux/Unix](https://www.linuxnix.com/abslute-path-vs-relative-path-in-linuxunix/)\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"i9becb\\\"},{\\\"title\\\":\\\"Leetcode-66~70\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"leetcode\\\"],\\\"tags\\\":[\\\"leetcode\\\",\\\"mysqrt\\\",\\\"binary-question\\\"],\\\"date\\\":\\\"2019-04-02T14:40:00.000Z\\\",\\\"series\\\":\\\"leetcode\\\",\\\"char_count\\\":8710,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### 66.Plus One(Easy)\\\\n\\\\nGiven a **non-empty** array of digits representing a non-negative integer, plus one to the integer.\\\\n\\\\nThe digits are stored such that the most significant digit is at the head of the list, and each element in the array contain a single digit.\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"z9pvg9\\\"},{\\\"title\\\":\\\"Leetcode-61~65\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"leetcode\\\"],\\\"tags\\\":[\\\"leetcode\\\"],\\\"date\\\":\\\"2019-04-02T06:18:00.000Z\\\",\\\"series\\\":\\\"leetcode\\\",\\\"char_count\\\":5624,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### 61.Rotate List(Medium)\\\\n\\\\nGiven a linked list, rotate the list to the right by *k* places, where *k* is non-negative.\\\\n\\\\n**Example 1:**\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1cu6q2d\\\"},{\\\"title\\\":\\\"Leetcode-56~60\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"leetcode\\\"],\\\"tags\\\":[\\\"leetcode\\\",\\\"n-queens\\\",\\\"backtrack\\\"],\\\"date\\\":\\\"2019-03-30T13:16:00.000Z\\\",\\\"series\\\":\\\"leetcode\\\",\\\"char_count\\\":7029,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### 56.Merge Intervals(Medium)\\\\n\\\\nGiven a collection of intervals, merge all overlapping intervals.\\\\n\\\\n**Example 1:**\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1kv61wq\\\"},{\\\"title\\\":\\\"Leetcode-51~55\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"leetcode\\\"],\\\"tags\\\":[\\\"leetcode\\\",\\\"n-queens\\\",\\\"backtrack\\\"],\\\"date\\\":\\\"2019-03-30T02:57:00.000Z\\\",\\\"series\\\":\\\"leetcode\\\",\\\"char_count\\\":11884,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### 51. N-Queens(Hard)\\\\n\\\\nThe *n*-queens puzzle is the problem of placing *n* queens on an *n*×*n* chessboard such that no two queens attack each other.\\\\n\\\\n\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"xmbex2\\\"},{\\\"title\\\":\\\"Leetcode-46~50\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"leetcode\\\"],\\\"tags\\\":[\\\"leetcode\\\",\\\"permutation\\\",\\\"backtrack\\\",\\\"mypow\\\"],\\\"date\\\":\\\"2019-03-27T07:39:00.000Z\\\",\\\"series\\\":\\\"leetcode\\\",\\\"char_count\\\":6440,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### 46. Permutation(Medium)\\\\n\\\\nGiven a collection of **distinct** integers, return all possible permutations.\\\\n\\\\n**Example:**\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"jywoys\\\"},{\\\"title\\\":\\\"Some Backtracking Problem In Leetcode\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"backtracking\\\"],\\\"tags\\\":[\\\"leetcode\\\",\\\"backtracking\\\"],\\\"date\\\":\\\"2019-03-24T08:26:00.000Z\\\",\\\"char_count\\\":10792,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### Introduction\\\\n\\\\n在Leetcode上做到某些题的时候，会发现这些题的解法大致都是差不多，将**ans容器**传递到某个方法中，这个方法一般有`dfs`，`backtracking`，`bfs`，等命名，然后方法中会有递归调用，然后到达某一个出口的时候，就会将当前的**tmp答案**放置到**ans容器**中，于是达到探索所有解的目的\\\\n\\\\n这篇大概也是各个题的题解，只是在评论区里看到有人[整理](https://leetcode.com/problems/permutations/discuss/18239/A-general-approach-to-backtracking-questions-in-Java-(Subsets-Permutations-Combination-Sum-Palindrome-Partioning))了，我就一起整理下来分析分析\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1x7azit\\\"},{\\\"title\\\":\\\"DP Again\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"dp\\\"],\\\"tags\\\":[\\\"dp\\\"],\\\"date\\\":\\\"2019-03-22T06:14:00.000Z\\\",\\\"char_count\\\":18172,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### Introduction\\\\n\\\\n我们先分析Leetcode的55题，是从45题Jump Game II 跳过来的，因为这题比II要简单一点，只需要判断序列是否能jump到终点就行，而45题是要找最小的jump次数；\\\\n\\\\n为什么这题要拿出篇幅来分析？因为这题包含了很多东西： \\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1flo1c0\\\"},{\\\"title\\\":\\\"Leetcode-41~45\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"leetcode\\\"],\\\"tags\\\":[\\\"leetcode\\\"],\\\"date\\\":\\\"2019-03-20T20:03:00.000Z\\\",\\\"series\\\":\\\"leetcode\\\",\\\"char_count\\\":10695,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### 41. First Missing Postive(Hard)\\\\n\\\\nGiven an unsorted integer array, find the smallest missing positive integer.\\\\n\\\\n**Example 1:**\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"11z93zc\\\"},{\\\"title\\\":\\\"Leetcode-36~40\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"leetcode\\\"],\\\"tags\\\":[\\\"leetcode\\\",\\\"sudoku\\\",\\\"combination-sum\\\"],\\\"date\\\":\\\"2019-03-20T19:46:00.000Z\\\",\\\"series\\\":\\\"leetcode\\\",\\\"char_count\\\":8096,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### 36. Valid Sudoku(Medium)\\\\n\\\\nDetermine if a 9x9 Sudoku board is valid. Only the filled cells need to be validated **according to the following rules**:\\\\n\\\\n1. Each row must contain the digits `1-9` without repetition.\\\\n2. Each column must contain the digits `1-9` without repetition.\\\\n\\\",\\\"abbrlink\\\":\\\"v6ei19\\\"},{\\\"title\\\":\\\"再谈对象分代和GC事件\\\",\\\"categories\\\":[\\\"java\\\",\\\"jvm\\\",\\\"memory\\\"],\\\"tags\\\":[\\\"gc\\\",\\\"gc-event\\\",\\\"generation-type\\\"],\\\"date\\\":\\\"2019-03-18T20:46:00.000Z\\\",\\\"char_count\\\":2424,\\\"short_content\\\":\\\"\\\\n\\\\n### Introduction\\\\n\\\\n之前在搜 OOM 的时候，无意中发现了[https://plumbr.io/](https://plumbr.io/)这个网站，它们的产品就是做内存监控工具之类的，于是官网上也有很多关于 JVM 的 GC 方面的技术博客，简直和挖到宝藏了一样- -\\\\n\\\\n本篇主要是针对对象在堆上的分代和 GC 事件再做一些细致的了解，主要也是参考网站里的内容\\\\n\\\\n### Object Generation\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"wlvrl9\\\"},{\\\"title\\\":\\\"字节跳动2019-03-16后端笔试\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"notes\\\"],\\\"tags\\\":[\\\"笔试\\\"],\\\"date\\\":\\\"2019-03-16T22:22:00.000Z\\\",\\\"char_count\\\":6307,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### Introduction\\\\n\\\\n就A了签到题，我觉得这次笔试很简单了，可是后面3题没过一个case，题目不难，各种各样的失误8，说到底菜才是原罪，还是得多刷题\\\\n\\\\n和leecode不一样的是：\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"djlqql\\\"},{\\\"title\\\":\\\"Leetcode-31~35\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"leetcode\\\"],\\\"tags\\\":[\\\"leetcode\\\"],\\\"date\\\":\\\"2019-03-16T21:46:00.000Z\\\",\\\"series\\\":\\\"leetcode\\\",\\\"char_count\\\":7919,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### 31. Next Permutation(Medium)\\\\n\\\\nImplement **next permutation**, which rearranges numbers into the lexicographically next greater permutation of numbers.\\\\n\\\\nIf such arrangement is not possible, it must rearrange it as the lowest possible order (ie, sorted in ascending order).\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"dbne5d\\\"},{\\\"title\\\":\\\"Leetcode-26~30\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"leetcode\\\"],\\\"tags\\\":[\\\"leetcode\\\"],\\\"date\\\":\\\"2019-03-09T16:21:00.000Z\\\",\\\"series\\\":\\\"leetcode\\\",\\\"char_count\\\":12579,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### 26. Remove Duplicated From Sorted Array(Easy)\\\\n\\\\nGiven a sorted array *nums*, remove the duplicates [**in-place**](https://en.wikipedia.org/wiki/In-place_algorithm) such that each element appear only *once* and return the new length.\\\\n\\\\nDo not allocate extra space for another array, you must do this by **modifying the input array in-place** with O(1) extra memory.\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"448jer\\\"},{\\\"title\\\":\\\"Leetcode-21~25\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"leetcode\\\"],\\\"tags\\\":[\\\"leetcode\\\"],\\\"date\\\":\\\"2019-03-06T21:17:00.000Z\\\",\\\"series\\\":\\\"leetcode\\\",\\\"char_count\\\":10031,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### 21. Merge Two Sorted Lists(Easy)\\\\n\\\\nMerge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.\\\\n\\\\n**Example:**\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1hrw4sv\\\"},{\\\"title\\\":\\\"Leetcode-16~20\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"leetcode\\\"],\\\"tags\\\":[\\\"leetcode\\\"],\\\"date\\\":\\\"2019-03-06T20:13:00.000Z\\\",\\\"series\\\":\\\"leetcode\\\",\\\"char_count\\\":8964,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### 16.3SumClosest(Medium)\\\\n\\\\nGiven an array `nums` of *n* integers and an integer `target`, find three integers in `nums` such that the sum is closest to `target`. Return the sum of the three integers. You may assume that each input would have exactly one solution.\\\\n\\\\n**Example:**\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"3yl2hx\\\"},{\\\"title\\\":\\\"Help GC A Favor & JIT Introduction\\\",\\\"categories\\\":[\\\"java\\\",\\\"jvm\\\",\\\"gc\\\"],\\\"tags\\\":[\\\"JVM\\\",\\\"GC\\\",\\\"JIT\\\",\\\"OOM\\\"],\\\"date\\\":\\\"2019-03-04T04:19:00.000Z\\\",\\\"char_count\\\":9173,\\\"short_content\\\":\\\"\\\\n\\\\n### Introduction\\\\n\\\\n之前我们了解过 GC 的很多行为和特点了，也大致知道 OOM 发生的地点和原因，然后还深入了解了 Java 中的 Reference\\\\n\\\\n接下来我们简单说一下如何避免 OOM，帮 GCor 们一个小忙\\\\n\\\\n### Help GC\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"12iaggv\\\"},{\\\"title\\\":\\\"Java's Refernece\\\",\\\"categories\\\":[\\\"java\\\",\\\"grammar\\\"],\\\"tags\\\":[\\\"reference-type\\\"],\\\"date\\\":\\\"2019-03-02T21:08:00.000Z\\\",\\\"char_count\\\":7461,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### Introduction\\\\n\\\\n本篇主要内容：\\\\n\\\\n1. Java 到底是值传递还是引用传递\\\\n2. Java 中的引用类型详解以其应用场景\\\\n\\\",\\\"abbrlink\\\":\\\"13tt0au\\\"},{\\\"title\\\":\\\"The Revelation of Java String\\\",\\\"categories\\\":[\\\"java\\\",\\\"jvm\\\",\\\"memory\\\"],\\\"tags\\\":[\\\"java-string\\\",\\\"string-pool\\\"],\\\"date\\\":\\\"2019-03-02T13:50:00.000Z\\\",\\\"char_count\\\":15597,\\\"short_content\\\":\\\"\\\\n\\\\n### Introduction\\\\n\\\\nJava 中的`String`其实有很多东西可以深入的，比如最快拼接效率，比如常量池，比如老生常谈的`==`问题\\\\n\\\\n研究它们的时候我们始终要记住，`String`是不可变的**（immutable）**\\\\n\\\\n还有比如它的本质是一个`char[]`数组这些事实就简单带过了\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"46bhg0\\\"},{\\\"title\\\":\\\"Leetcode-11~15\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"leetcode\\\"],\\\"tags\\\":[\\\"leetcode\\\"],\\\"date\\\":\\\"2019-02-27T21:42:00.000Z\\\",\\\"series\\\":\\\"leetcode\\\",\\\"char_count\\\":9913,\\\"short_content\\\":\\\"\\\\n\\\\n### 11. Container With Most Water(Medium)\\\\n\\\\nGiven _n_ non-negative integers _a1_, _a2_, ..., _an_ , where each represents a point at coordinate (_i_, _ai_). _n_ vertical lines are drawn such that the two endpoints of line _i_ is at (_i_, _ai_) and (_i_, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.\\\\n\\\\n**Note:** You may not slant the container and _n_ is at least 2.\\\\n\\\\n\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"2gps3g\\\"},{\\\"title\\\":\\\"最近点对及其相关问题\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"notes\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2019-02-26T23:04:00.000Z\\\",\\\"tags\\\":[\\\"algorithm\\\",\\\"twopoint\\\"],\\\"char_count\\\":5984,\\\"short_content\\\":\\\"\\\\n\\\\n### Introduction\\\\n\\\\n二维坐标中有一堆点集，记为 P，假设 P 中至少有 2 个点，那么求出 P 中距离最近的两个点；\\\\n\\\\n首先为了问题准备好点和求两点距离的方法，其中如果两点距离的输入只有一个点，那么它的距离代表无穷大，它表示没有解\\\\n\\\\n```java\\\\nclass Point {\\\\n```\\\\n\\\",\\\"abbrlink\\\":\\\"1d9upzt\\\"},{\\\"title\\\":\\\"Leetcode-6~10\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"leetcode\\\"],\\\"tags\\\":[\\\"leetcode\\\"],\\\"date\\\":\\\"2019-02-17T13:18:00.000Z\\\",\\\"series\\\":\\\"leetcode\\\",\\\"char_count\\\":16445,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### 6. ZigZag Conversion(Medium)\\\\n\\\\nThe string `\\\\\\\"PAYPALISHIRING\\\\\\\"` is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)\\\\n\\\\n```graph\\\\nP   A   H   N\\\\n```\\\\n\\\",\\\"abbrlink\\\":\\\"t1f0vq\\\"},{\\\"title\\\":\\\"Hashing\\\",\\\"categories\\\":[\\\"data structures\\\",\\\"hash\\\"],\\\"tags\\\":[\\\"algorithm\\\",\\\"hash\\\"],\\\"date\\\":\\\"2019-02-02T20:40:00.000Z\\\",\\\"char_count\\\":5419,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### What is HashTable\\\\n\\\\nOf all structure we learn before like \\\\\\\"array\\\\\\\" or \\\\\\\"stack\\\\\\\", the element's position on their structure is not absolute, it's uncertain which means there is no pattern on it.  \\\\n\\\\nSo the searching operation was always base on \\\\\\\"comparing\\\\\\\",  the searching efficiency of them were dependence on the times they perform compare.\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1f3qusx\\\"},{\\\"title\\\":\\\"Leetcode-1~5\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"leetcode\\\"],\\\"tags\\\":[\\\"leetcode\\\"],\\\"date\\\":\\\"2019-02-02T19:51:00.000Z\\\",\\\"series\\\":\\\"leetcode\\\",\\\"char_count\\\":19301,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### 1. TwoSum(Easy)\\\\n\\\\nGiven an array of integers, return **indices** of the two numbers such that they add up to a specific target.\\\\n\\\\nYou may assume that each input would have **exactly** one solution, and you may not use the *same* element twice.\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"pn2ezr\\\"},{\\\"title\\\":\\\"Tree Binary Tree\\\",\\\"categories\\\":[\\\"data structures\\\",\\\"tree\\\"],\\\"tags\\\":[\\\"algorithm\\\",\\\"binary-tree\\\",\\\"tree\\\",\\\"dfs\\\",\\\"bfs\\\"],\\\"date\\\":\\\"2019-01-30T21:36:20.000Z\\\",\\\"char_count\\\":4608,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### Basic Algorithm In Binary Tree\\\\n\\\\n#### Traverse\\\\n\\\\nA Tree is typically traversed in two ways:\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1aew5v7\\\"},{\\\"title\\\":\\\"Tree Introduction\\\",\\\"categories\\\":[\\\"data structures\\\",\\\"tree\\\"],\\\"tags\\\":[\\\"algorithm\\\",\\\"binary-tree\\\"],\\\"date\\\":\\\"2019-01-28T15:11:00.000Z\\\",\\\"char_count\\\":5333,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### Should have a PLAN!\\\\n\\\\nI was asked a tree problem when I was having a face to face interview at *PayPal* last Friday, and I might failed on this question.\\\\n\\\\nIt's been too long that I'm almost forgot the knowledge of TREE, and I've never truly go over it and it's time to get it done.\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1qvt6fv\\\"},{\\\"title\\\":\\\"Java并发编程第八坎\\\",\\\"categories\\\":[\\\"java\\\",\\\"concurrency\\\",\\\"《艺术》与《技术》\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"java\\\",\\\"thread\\\",\\\"Lock-Api\\\",\\\"reentrantLock\\\",\\\"reentrantReadWriteLock\\\"],\\\"date\\\":\\\"2019-01-07T22:46:48.000Z\\\",\\\"series\\\":\\\"并发\\\",\\\"char_count\\\":15613,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### Introduction\\\\n\\\\n我们对Lock和AQS有了一定的了解了之后，可以尝试着接触一些Lock+AQS的基本实现了，本篇会了解到最基本的同步组件`ReentrantLock`和`ReentrantReadWriteLock`，前者提供了排他锁的实现，并且支持重入，后者在前者的基础上，支持锁的分级，写锁排他读锁共享。特别的，重入锁的获取还有公平和非公平之分，我们先从这部分入手。\\\\n\\\\n#### Fair Lock & Nonfair Lock\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1u7rv30\\\"},{\\\"title\\\":\\\"CLH Lock Queue\\\",\\\"categories\\\":[\\\"data structures\\\",\\\"list\\\"],\\\"tags\\\":[\\\"algorithm\\\",\\\"clh-lock-queue\\\"],\\\"date\\\":\\\"2018-12-30T16:35:00.000Z\\\",\\\"char_count\\\":4711,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### Introduction\\\\n\\\\n在学习Java并发中的同步器源码的时候，注释中有提到过AQS的Node结构是参考CLH的一种变体：\\\\n\\\\n> The wait queue is a variant of a \\\\\\\"CLH\\\\\\\" (Craig, Landin, and Hagersten) lock queue. \\\\n>\\\\n\\\",\\\"abbrlink\\\":\\\"vywf17\\\"},{\\\"title\\\":\\\"Java并发编程第七坎-2\\\",\\\"categories\\\":[\\\"java\\\",\\\"concurrency\\\",\\\"《艺术》与《技术》\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"java\\\",\\\"thread\\\",\\\"AQS\\\"],\\\"date\\\":\\\"2018-12-30T12:58:48.000Z\\\",\\\"series\\\":\\\"并发\\\",\\\"char_count\\\":19385,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### Introduction\\\\n\\\\n上节我们介绍了Java并发编程的一个新的阶段——Java并发包中的`Lock`接口以及`AbstractQueuedSynchronizer`的配合使用\\\\n\\\\n并且尝试实现了一个简单的独占锁Mutex，借此我们了解到，并发编程还能如此灵活与优雅\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"u4sgci\\\"},{\\\"title\\\":\\\"Java并发编程第七坎\\\",\\\"categories\\\":[\\\"java\\\",\\\"concurrency\\\",\\\"《艺术》与《技术》\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"java\\\",\\\"thread\\\",\\\"AQS\\\",\\\"Lock-Api\\\"],\\\"date\\\":\\\"2018-12-25T22:22:48.000Z\\\",\\\"series\\\":\\\"并发\\\",\\\"char_count\\\":9004,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n### Introduction\\\\n\\\\n> 事前吐槽：*Doug Lea*老爷子的注释可真难读，也许是我英语太菜鸡了- -（本来还挺自信的，现在哭着学英语）\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"7kdfk8\\\"},{\\\"title\\\":\\\"Docker Volumes\\\",\\\"categories\\\":[\\\"docker\\\",\\\"notes\\\"],\\\"tags\\\":[\\\"docker\\\",\\\"volume\\\"],\\\"date\\\":\\\"2018-12-05T10:23:09.000Z\\\",\\\"series\\\":\\\"docker\\\",\\\"char_count\\\":8431,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### Introduction\\\\n\\\\n> **Volumes are the preferred mechanism for persisting data generated by and used by Docker containers.** While [bind mounts](https://docs.docker.com/storage/bind-mounts/) are dependent on the directory structure of the host machine, **volumes are completely managed by Docker**. Volumes have several advantages over bind mounts:\\\\n>\\\\n> - Volumes are easier to back up or migrate than bind mounts.\\\\n> - You can manage volumes using Docker CLI commands or the Docker API.\\\\n\\\",\\\"abbrlink\\\":\\\"1ae6lng\\\"},{\\\"title\\\":\\\"Docker Persist Data Overview\\\",\\\"categories\\\":[\\\"docker\\\",\\\"notes\\\"],\\\"tags\\\":[\\\"docker\\\",\\\"volume\\\"],\\\"date\\\":\\\"2018-12-04T09:44:33.000Z\\\",\\\"series\\\":\\\"docker\\\",\\\"char_count\\\":7276,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### Introduction\\\\n\\\\nBy default all files created inside a container are stored on a writable container layer.\\\\n\\\\nThat means that the data doesn't persist when that container no longer exists, and it can be difficult to get the data out of the container if another process needs it.\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"lt42s8\\\"},{\\\"title\\\":\\\"Docker ConceptReview\\\",\\\"categories\\\":[\\\"docker\\\",\\\"notes\\\"],\\\"tags\\\":[\\\"docker\\\"],\\\"date\\\":\\\"2018-12-02T12:39:09.000Z\\\",\\\"series\\\":\\\"docker\\\",\\\"char_count\\\":7660,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### Introduction\\\\n\\\\nIn this section, we will go through all the main concepts of docker technologies such as : **Docker Engine**, **Docker Architecture**, **Docker underlying technology**.\\\\n\\\\nBasically reprinted from: https://docs.docker.com/engine/docker-overview, but I will make some adjustment for better understanding.\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"rx7jt4\\\"},{\\\"title\\\":\\\"Docker Stack\\\",\\\"categories\\\":[\\\"docker\\\",\\\"notes\\\"],\\\"tags\\\":[\\\"docker\\\"],\\\"date\\\":\\\"2018-11-29T16:46:00.000Z\\\",\\\"series\\\":\\\"docker\\\",\\\"char_count\\\":6260,\\\"short_content\\\":\\\"\\\\n\\\\n### Introduction\\\\n\\\\nAt the part of \\\\\\\"Container\\\\\\\", we've know we can define a `docker-compose.yaml` to deploy a service on our swarm so it can run on multiple machine.\\\\n\\\\nAs we practice before, our service just contains one container: a python app that provide web service with Flask.\\\\n\\\\nBut did you remember that sentence ? **Services are really just \\\\\\\"Containers in Production\\\\\\\"**\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"u7sd0w\\\"},{\\\"title\\\":\\\"Docker Swarm&ClusterSetup\\\",\\\"categories\\\":[\\\"docker\\\",\\\"notes\\\"],\\\"tags\\\":[\\\"docker\\\",\\\"cluster\\\",\\\"swarm\\\"],\\\"date\\\":\\\"2018-11-28T21:06:03.000Z\\\",\\\"series\\\":\\\"docker\\\",\\\"char_count\\\":10989,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### Introduction\\\\n\\\\nIn the last post, we discussed the relationship between Application and Service. \\\\n\\\\nSo they say: **Services are really just \\\\\\\"Containers in Production\\\\\\\".**\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1toixsk\\\"},{\\\"title\\\":\\\"Docker Service&Composefile\\\",\\\"categories\\\":[\\\"docker\\\",\\\"notes\\\"],\\\"tags\\\":[\\\"docker\\\",\\\"compose-file\\\"],\\\"date\\\":\\\"2018-11-27T12:19:02.000Z\\\",\\\"series\\\":\\\"docker\\\",\\\"char_count\\\":5865,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### Service\\\\n\\\\nIn a distributed application, different pieces of the app are called “services.” For example, if you imagine a video sharing site, it probably includes **[1]a service for storing application data in a database**, **[2]a service for video transcoding in the background after a user uploads something**, **[3]a service for the front-end**, and so on.\\\\n\\\\nServices are really just “containers in production.” A service only runs one image, but it codifies the way that image runs:\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"zkr55u\\\"},{\\\"title\\\":\\\"Jenkins Introductions&Setup\\\",\\\"categories\\\":[\\\"jenkins\\\",\\\"notes\\\"],\\\"tags\\\":[\\\"setup\\\",\\\"jenkins\\\"],\\\"date\\\":\\\"2018-11-19T14:51:00.000Z\\\",\\\"series\\\":\\\"jenkins\\\",\\\"char_count\\\":4106,\\\"short_content\\\":\\\"\\\\n\\\\n### Introductions\\\\n\\\\n首先 Jenkins 要吐槽一下，Jenkins 的 Logo 真的是太丑了，虽然很明显是一个管家形象- -\\\\n\\\\n\\\\n\\\\nJenkins 的默认 UI 也有点丑，还不如官网的 UI 好看\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1arzjog\\\"},{\\\"title\\\":\\\"写在21岁的最后一天\\\",\\\"categories\\\":[\\\"essay\\\"],\\\"date\\\":\\\"2018-11-17T15:53:00.000Z\\\",\\\"char_count\\\":3466,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n#### 0. 特定的时刻\\\\n\\\\n我是完全不过生日的, 不要礼物不要钱, 不请朋友大鱼大肉也不买蛋糕许愿望更不拉帮结派开party, 过生日我只会想家人想妈妈\\\\n\\\\n但是今年这个生日有点特殊吧\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1xetsy3\\\"},{\\\"title\\\":\\\"关于JVM的GC行为和内存分配\\\",\\\"categories\\\":[\\\"java\\\",\\\"jvm\\\",\\\"gc\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2018-11-17T15:35:00.000Z\\\",\\\"tags\\\":[\\\"jvm\\\",\\\"generation-type\\\",\\\"gc\\\",\\\"gc算法\\\",\\\"root-point\\\",\\\"saft-point\\\",\\\"safe-area\\\"],\\\"series\\\":\\\"JVM\\\",\\\"char_count\\\":6519,\\\"short_content\\\":\\\"\\\\n\\\\n### 对象分代和朝生夕灭\\\\n\\\\n对象所在的内存区按照对象存活的时间长久会简单分为：新生代、老年代\\\\n\\\\n**Garbage Collector**的行为和对象内存所在的区域有很大关系，所以在分析**Collector**之前，我们得先了解一下对象内存的分区\\\\n\\\\n我们需要清楚的是，Java 中**98%**的对象都是**朝生夕灭**的，所以新生代区往往是 GC 要重点照顾的区域\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"jhpq7e\\\"},{\\\"title\\\":\\\"Docker Containers&Dockerfile\\\",\\\"categories\\\":[\\\"docker\\\",\\\"notes\\\"],\\\"tags\\\":[\\\"docker\\\"],\\\"date\\\":\\\"2018-11-16T15:05:11.000Z\\\",\\\"series\\\":\\\"docker\\\",\\\"char_count\\\":9082,\\\"short_content\\\":\\\"\\\\n\\\\n### Introduction\\\\n\\\\n本篇主要介绍Docker里面Containers的概念，以及它的定义\\\\n\\\\n还有就是如何分享你创建的Containers到hub上面\\\\n\\\\n需要注意的是，containers的定义其实就是image的定义\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"uh480l\\\"},{\\\"title\\\":\\\"Tess login on Jenkins\\\",\\\"categories\\\":[\\\"eBay\\\"],\\\"tags\\\":[\\\"tess\\\"],\\\"date\\\":\\\"2018-11-16T14:10:08.000Z\\\",\\\"char_count\\\":6842,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### Tess login on Jenkins\\\\n\\\\n#### Use tess with Rheos tess-base agent\\\\n\\\\nAssume that you are at \\\\\\\"Job Configure\\\\\\\" panel now.\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1gukab6\\\"},{\\\"title\\\":\\\"Introductions of eBay Tess\\\",\\\"categories\\\":[\\\"eBay\\\"],\\\"tags\\\":[\\\"eBay\\\",\\\"tess\\\"],\\\"date\\\":\\\"2018-11-15T16:18:00.000Z\\\",\\\"char_count\\\":6118,\\\"short_content\\\":\\\"\\\\n\\\\n### Tess\\\\n\\\\n#### 0. What is Tess?\\\\n\\\\nTess.IO is eBay’s cluster manager, with a vision of ensuring a world-class **build, ship and run** experience for eBay’s applications at scale, while ensuring high efficiency, security, and agility to the developers. Tess.IO leverages Kubernetes under its hood. Kubernetes (commonly referred to as “k8s”) is an open source container cluster manager that aims to provide a “platform for automating deployment, scaling, and operations of application containers across clusters of hosts.”\\\\n\\\\nTess makes DevOps a breeze.\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"2032k5\\\"},{\\\"title\\\":\\\"关于JVM的运行时数据区上的GC\\\",\\\"categories\\\":[\\\"java\\\",\\\"jvm\\\",\\\"gc\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2018-11-14T22:45:00.000Z\\\",\\\"tags\\\":[\\\"jvm\\\",\\\"gc\\\",\\\"reference-type\\\",\\\"finalize\\\"],\\\"series\\\":\\\"JVM\\\",\\\"char_count\\\":2770,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### Introduction\\\\n\\\\n本篇主要介绍什么是GC，GC一般发生在哪里，GC在这些地方都干些什么\\\\n\\\\n顺带简单提一下四种**引用类型**以及`finalize()`方法\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"d5ykz8\\\"},{\\\"title\\\":\\\"关于JVM的对象创建与访问\\\",\\\"categories\\\":[\\\"java\\\",\\\"jvm\\\",\\\"memory\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2018-11-14T21:45:00.000Z\\\",\\\"tags\\\":[\\\"jvm\\\",\\\"jvm对象创建\\\"],\\\"series\\\":\\\"JVM\\\",\\\"char_count\\\":3028,\\\"short_content\\\":\\\"\\\\n\\\\n### HotSpot 虚拟机对象内存\\\\n\\\\n深入讨论 HotSpot 虚拟机在 Java 堆中的对象分配、内存布局和对象访问的过程\\\\n\\\\n#### 对象创建流程\\\\n\\\\n##### 过程\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"18669ga\\\"},{\\\"title\\\":\\\"Docker Orientation&Setup\\\",\\\"categories\\\":[\\\"docker\\\",\\\"notes\\\"],\\\"tags\\\":[\\\"docker\\\"],\\\"date\\\":\\\"2018-11-14T13:50:11.000Z\\\",\\\"series\\\":\\\"docker\\\",\\\"char_count\\\":7510,\\\"short_content\\\":\\\"\\\\n\\\\n### Docker concepts\\\\n\\\\nDocker is a platform for developers and sysadmins to **develop, deploy, and run** applications with containers. The use of Linux containers to deploy applications is called _containerization_. Containers are not new, but their use for easily deploying applications is.\\\\n\\\\nContainerization is increasingly popular because containers are:\\\\n\\\\n- Flexible: Even the most complex applications can be containerized.\\\\n- Lightweight: Containers leverage and share the host kernel.\\\\n\\\",\\\"abbrlink\\\":\\\"1ei198o\\\"},{\\\"title\\\":\\\"kafka-topic-storage-detail\\\",\\\"categories\\\":[\\\"kafka\\\",\\\"notes\\\"],\\\"tags\\\":[\\\"kafka\\\"],\\\"date\\\":\\\"2018-11-06T16:34:00.000Z\\\",\\\"char_count\\\":6330,\\\"short_content\\\":\\\"\\\\n\\\\n### Topic & Partition\\\\n\\\\nkafka 中的 Message 以 topic 为分类去组织的，每个 topic 又可以分为不同的 partition 去存储：\\\\n\\\\n\\\\n\\\\n我们引用官方的 Introduction 中的一节，看官方是怎么解释的：\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1ro5m3y\\\"},{\\\"title\\\":\\\"kafka-helloworld-concept\\\",\\\"categories\\\":[\\\"kafka\\\",\\\"notes\\\"],\\\"tags\\\":[\\\"kafka\\\"],\\\"date\\\":\\\"2018-11-06T15:39:00.000Z\\\",\\\"char_count\\\":6890,\\\"short_content\\\":\\\"\\\\n\\\\n### 前言\\\\n\\\\n因为Intern Job的原因，要接触到kafka和Microservice，虽然目前接触的不是很多，对于kafka的场景还不是很熟悉，但是总觉得这个东西是必学的，也是很重要的一种趋势\\\\n\\\\n于是前几天给帖老板写的Graduation Design里写的就是kafka+springboot+opentracing的tracing监控系统\\\\n\\\\n难度还是有的，springboot刚上手，opentracing的api在前一个月的工作里面也算是熟悉了，关键就是kafka以及如何把这几个玩意整合起来\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"u28b7l\\\"},{\\\"title\\\":\\\"微服务架构理论基础-康威定律\\\",\\\"categories\\\":[\\\"reprinted\\\"],\\\"date\\\":\\\"2018-11-06T10:44:01.000Z\\\",\\\"char_count\\\":6981,\\\"short_content\\\":\\\"\\\\n\\\\n### 前言\\\\n\\\\n> 可能出乎很多人意料之外的一个事实是，微服务很多核心理念其实在半个世纪前的一篇文章中就被阐述过了，而且这篇文章中的很多论点在软件开发飞速发展的这半个世纪中竟然一再被验证，这就是康威定律。\\\\n\\\\n### 概述\\\\n\\\\n微服务是最近非常火热的新概念，大家都在追，也都觉得很对，但是似乎没有很充足的理论基础说明这是正确的，给人的感觉是 **不明觉厉** 。前段时间看了Mike Amundsen [《远距离条件下的康威定律——分布式世界中实现团队构建》](http://www.infoq.com/cn/presentations/team-building-implementation-in-distributed-world)（是Design RESTful API的作者）在InfoQ上的一个分享，觉得很有帮助，结合自己的一些思考，整理了该演讲的内容。\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"pjff39\\\"},{\\\"title\\\":\\\"微服务（Microservice）那点事\\\",\\\"categories\\\":[\\\"reprinted\\\"],\\\"date\\\":\\\"2018-11-06T10:21:00.000Z\\\",\\\"char_count\\\":7793,\\\"short_content\\\":\\\"\\\\n\\\\n### 前言\\\\n\\\\n> 微服务架构被提出很短的时间内，就被越来越多的开发人员推崇，简单来说其主要的目的是有效的拆分应用，实现敏捷开发和部署 。\\\\n>\\\\n> 本分享即尝试介绍微服务架构的一些实施细节和要求，探询微服务架构的由来，并最终提供我们团队内部的一些实践总结，希望对大家有帮助。\\\\n\\\\n### WHAT - 什么是微服务\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1kb6gry\\\"},{\\\"title\\\":\\\"Graduation Design\\\",\\\"categories\\\":[\\\"essay\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2018-11-02T21:56:10.000Z\\\",\\\"char_count\\\":1754,\\\"short_content\\\":\\\"\\\\n\\\\n#### Graduation Design\\\\n\\\\n- Title：Tracing Monitoring System of Kafka-Cluster with Opentracing API\\\\n- Framework：B/S\\\\n- Technology stack：\\\\n\\\\n  - back-end：\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"q0aas8\\\"},{\\\"title\\\":\\\"地痞（DP）成长记\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"dp\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"algorithm\\\",\\\"dp\\\"],\\\"date\\\":\\\"2018-08-30T20:58:01.000Z\\\",\\\"char_count\\\":19492,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### 大声BB\\\\n\\\\n为了以后看到一道我知道是用DP但是不知道如何去DP的问题再也不会束手无策\\\\n\\\\n决心做一个地痞，至少下次看到一个DP不会再被它DP\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"188zp6j\\\"},{\\\"title\\\":\\\"AVL树和红黑树\\\",\\\"categories\\\":[\\\"data structures\\\",\\\"tree\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2018-08-27T15:05:00.000Z\\\",\\\"tags\\\":[\\\"BST\\\",\\\"AVL\\\",\\\"RBT\\\",\\\"algorithm\\\",\\\"tree\\\"],\\\"char_count\\\":8694,\\\"short_content\\\":\\\"\\\\n\\\\n### 小声 BB\\\\n\\\\n本篇尽量不 po 代码，仅仅过一遍 AVL 树和红黑树\\\\n\\\\n其中红黑树更是在 HashMap 中大展身手，肯定要研究一下为什么他们要用到 RBT\\\\n\\\\n---\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"wji6g0\\\"},{\\\"title\\\":\\\"查找大礼包\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"searching\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2018-08-22T13:10:00.000Z\\\",\\\"tags\\\":[\\\"algorithm\\\",\\\"search\\\"],\\\"char_count\\\":13106,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n#### 小声BB\\\\n\\\\n整理一波查找相关的东西\\\\n\\\\n- 几个元素查找算法如：\\\\n  - 顺序查找\\\\n\\\",\\\"abbrlink\\\":\\\"bg6w8m\\\"},{\\\"title\\\":\\\"把HashMap安排得明明白白\\\",\\\"categories\\\":[\\\"java\\\",\\\"collections-framework\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2018-08-16T12:12:21.000Z\\\",\\\"tags\\\":[\\\"hashmap\\\",\\\"collections-framework\\\"],\\\"series\\\":\\\"从头到尾读\\\",\\\"char_count\\\":24270,\\\"short_content\\\":\\\"\\\\n\\\\n### 前言\\\\n\\\\n一言难尽 直接开始吧 时间有限 就不一一解读接口了\\\\n\\\\n这篇是逐行级别的`HashMap`的**“基础操作”**源码解读，仅仅分析一些核心的**单元素基础操作（CRUD）**，尽可能从大框架思路去分析实现思路，一些太细的变量和无关操作，就不分析太多了\\\\n\\\\n本篇因为时间和精力有限，也跳过了一些很底层的分析如 hash 计算，比特位计算等，网上还有好多大神对于这个分析的比我好得多\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"ofa68o\\\"},{\\\"title\\\":\\\"算法回收站\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"notes\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2018-08-11T13:41:10.000Z\\\",\\\"tags\\\":[\\\"algorithm\\\"],\\\"char_count\\\":2124,\\\"short_content\\\":\\\"\\\\n\\\\n### 前言\\\\n\\\\n这篇记录下从今天开始，复习到、新遇到的所有算法题\\\\n\\\\n- 栈相关\\\\n- 数学逻辑相关\\\\n\\\\n---\\\\n\\\",\\\"abbrlink\\\":\\\"8lcrnu\\\"},{\\\"title\\\":\\\"记一次设计模式之旅\\\",\\\"categories\\\":[\\\"design-pattern\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2018-08-09T15:21:33.000Z\\\",\\\"tags\\\":[\\\"design-pattern\\\"],\\\"char_count\\\":18508,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### 前言\\\\n\\\\n我\\\\n\\\\n面试（大约两个月前）\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"9h3hmp\\\"},{\\\"title\\\":\\\"Java并发编程第六坎\\\",\\\"categories\\\":[\\\"java\\\",\\\"concurrency\\\",\\\"《艺术》与《技术》\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"java\\\",\\\"thread\\\",\\\"dead-lock\\\",\\\"wait/notify\\\",\\\"consumer/producer\\\",\\\"double-check-singleton\\\"],\\\"date\\\":\\\"2018-07-25T21:33:48.000Z\\\",\\\"series\\\":\\\"并发\\\",\\\"char_count\\\":11132,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n### 前言\\\\n\\\\n不知不觉写到第六坎了，前面刀剑磨刀石内功心法都有了，感觉自己应该很厉害了，其实不是，这一个月因为考试末尾和实习，断断续续的看，反反复复的看，越看越精神，越看越心虚。\\\\n\\\\n无论怎么说，短板还是得慢慢补上来，保持谦逊，虚心学习。\\\\n\\\\n回到整体，前面由内到外说了Java并发中很基本的几件事：\\\\n\\\",\\\"abbrlink\\\":\\\"139027a\\\"},{\\\"title\\\":\\\"Java并发编程第五坎\\\",\\\"categories\\\":[\\\"java\\\",\\\"concurrency\\\",\\\"《艺术》与《技术》\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"java\\\",\\\"thread\\\",\\\"JMM\\\",\\\"happens-before\\\",\\\"volatile语义\\\",\\\"锁语义\\\"],\\\"date\\\":\\\"2018-07-21T19:33:48.000Z\\\",\\\"series\\\":\\\"并发\\\",\\\"char_count\\\":9926,\\\"short_content\\\":\\\"\\\\n\\\\n### 前言\\\\n\\\\n前面说了好多好多刀枪剑，还说了一些最前置的内功心法，这回说说更深层的内功心法——**JMM，Java Memory Model，Java 内存模型！**\\\\n\\\\nJava 线程之间的通信对程序员是完全透明的（你是很难感知得到的），所以内存可见性问题经常称为并发的通病之一，这坎说的内存模型，是让你更好地去感知，去推断线程内存通信的有力武器。\\\\n\\\\n这坎基本就是*《核心》*的第三章内容，我就这书总结一下，然后调一下排版，主要说的内容：\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1xo3tpx\\\"},{\\\"title\\\":\\\"Java并发编程第四坎\\\",\\\"categories\\\":[\\\"java\\\",\\\"concurrency\\\",\\\"《艺术》与《技术》\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"java\\\",\\\"thread\\\",\\\"volatile\\\",\\\"synchronized\\\"],\\\"date\\\":\\\"2018-07-18T14:16:48.000Z\\\",\\\"series\\\":\\\"并发\\\",\\\"char_count\\\":11853,\\\"short_content\\\":\\\"\\\\n\\\\n### 前言\\\\n\\\\n这回说说 Java 并发编程第四坎，最常用的**volatile 和 synchronized 关键字**，这两个关键字是理解 java 同步编程的第一步，特别是**synchronized 关键字**\\\\n\\\\n而在*《Java 多线程编程核心技术》*的第 2.1 节中，作者不经意的道出了**线程同步的真谛之一：避免脏读**\\\\n\\\\n- **关键字的解说**\\\\n  - **volatile 的含义、底层实现和使用**\\\\n\\\",\\\"abbrlink\\\":\\\"db3vx3\\\"},{\\\"title\\\":\\\"Java并发编程第三坎\\\",\\\"categories\\\":[\\\"java\\\",\\\"concurrency\\\",\\\"《艺术》与《技术》\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"java\\\",\\\"thread\\\",\\\"CAS\\\",\\\"锁分类\\\"],\\\"date\\\":\\\"2018-07-18T14:15:22.000Z\\\",\\\"series\\\":\\\"并发\\\",\\\"char_count\\\":4267,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### 前言\\\\n\\\\n前两篇基本说了线程的基本概念和基本使用，这回说说Java并发编程第三坎，关于锁的好多基本概念的提前了解\\\\n\\\\n在讲锁之前，我们还需要介绍一个很重要的原理——CAS（Compare And Swap）操作，这个操作是保证并发过程中每个操作具有**“原子性”**的利器\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1h1ww1y\\\"},{\\\"title\\\":\\\"Java并发编程第二坎\\\",\\\"categories\\\":[\\\"java\\\",\\\"concurrency\\\",\\\"《艺术》与《技术》\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"java\\\",\\\"thread\\\",\\\"interrupt\\\",\\\"stop&suspend&resume\\\"],\\\"date\\\":\\\"2018-07-15T10:53:22.000Z\\\",\\\"series\\\":\\\"并发\\\",\\\"char_count\\\":12405,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### 前言\\\\n\\\\n前一篇基本说了线程的基本概念和如何创建一个线程，以及非常基本的几个线程方法，接下来我们说说线程的前几个控制相关的方法，包括和暂停一个线程（PAUSE）、让暂停的线程恢复（RESUME）、让线程终止（STOP）\\\\n\\\\n这篇我们但是这几个方法不能直接去用，因为这些方法都**过期了**！下面就着Java官方的文档解释，说说为什么过期这几个方法，以及贴出官方给的模板方法去实现这几个过期方法，具体的实现会在后面有例子\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1clnpuk\\\"},{\\\"title\\\":\\\"计算机网络-谢希仁-2\\\",\\\"categories\\\":[\\\"booknotes\\\",\\\"计算机网络\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2018-07-03T20:44:33.000Z\\\",\\\"tags\\\":[\\\"计算机网络\\\"],\\\"series\\\":\\\"《计算机网络》\\\",\\\"char_count\\\":3044,\\\"short_content\\\":\\\"\\\\n\\\\n### Chapter2-物理层\\\\n\\\\n物理层是计网体系结构中的最下面一层，本章主要介绍：\\\\n\\\\n1. 物理层的基本任务\\\\n2. 几种常用的信道复用技术\\\\n3. 几种常用的宽带接入技术\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1nz333d\\\"},{\\\"title\\\":\\\"计算机网络-谢希仁-1\\\",\\\"categories\\\":[\\\"booknotes\\\",\\\"计算机网络\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2018-06-30T10:28:33.000Z\\\",\\\"tags\\\":[\\\"计算机网络\\\"],\\\"series\\\":\\\"《计算机网络》\\\",\\\"char_count\\\":7267,\\\"short_content\\\":\\\"\\\\n\\\\n### 前言\\\\n\\\\n一周前考完了计算机网络，不得不说，计算机网络确实是一个精妙而繁杂的体系产物，虽然民大的考试都很水，但是计网这门课我是认认真真复习好了的，并不是当作考试去复习，每个点都看了，书上的课后习题都大概刷了 80%（谢希仁前辈出的这本书，习题量很多），基本上每个点都吃透了一遍。\\\\n\\\\n虽然后面还有两门考试，但很容易就过，也不需要准备，主要的复习科目也考完了，所以趁热打铁，马上进行计网的笔记整理和复习。\\\\n\\\\n因为学时有限，学校上的课程只教到第五章运输层，后面的没教，我准备先把前五章的笔记都整理下来，再继续看后面的内容，看完再整理。\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1k7g0p3\\\"},{\\\"title\\\":\\\"Java并发编程第一坎\\\",\\\"categories\\\":[\\\"java\\\",\\\"concurrency\\\",\\\"《艺术》与《技术》\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"java\\\",\\\"thread\\\",\\\"wait/notify\\\"],\\\"date\\\":\\\"2018-06-05T22:09:00.000Z\\\",\\\"series\\\":\\\"并发\\\",\\\"char_count\\\":13559,\\\"short_content\\\":\\\"\\\\n\\\\n### 前言\\\\n\\\\n本**系列**文章主要是为 Java 并发入门做铺垫，集中清点：\\\\n\\\\n- **Thread 的基本概念**\\\\n- **生命周期**\\\\n- **创建和使用**\\\\n- **线程的魅力所在**\\\\n\\\",\\\"abbrlink\\\":\\\"bu9klx\\\"},{\\\"title\\\":\\\"从头到尾读ArrayList\\\",\\\"categories\\\":[\\\"java\\\",\\\"collections-framework\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2018-06-05T08:31:21.000Z\\\",\\\"tags\\\":[\\\"arraylist\\\",\\\"collections-framework\\\"],\\\"series\\\":\\\"从头到尾读\\\",\\\"char_count\\\":15573,\\\"short_content\\\":\\\"\\\\n\\\\n#### ArrayList类\\\\n\\\\n对终于要正式开始读**ArrayList**的源码了，虽然**ArrayList**的源码价值并不是那么地大，但作为集合框架源码阅读的第一站来说，我选择了在这里站稳脚跟\\\\n\\\\n这个计划搁置了很久，大概有15天，中间跑去面试了一个星期，面试下来发现自己的基础已经忘的差不多了，决定回来好好沉淀一段时间，暑期实习offer有没有已经不重要了，**剑指秋招！**\\\\n\\\\n为什么要读它，因为线性表几乎是数据结构的基础必备，昨晚花了将近1小时手撸了一个ArrayList的自实现，再搭配源码来看**自己在基础方法上有哪些没考虑到的点**，以及**实际投入使用的ArrayList到底优秀在哪里**\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"rku8jh\\\"},{\\\"title\\\":\\\"自实现ArrayList\\\",\\\"categories\\\":[\\\"java\\\",\\\"collections-framework\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2018-06-04T22:47:12.000Z\\\",\\\"tags\\\":[\\\"arraylist\\\"],\\\"char_count\\\":4849,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n#### 前言\\\\n\\\\n最近在复习**数据结构**和**算法**，这两个玩意也是被称之为**“程序员的基本素养”**，我最近比较想干的一件事就是读集合框架的源码\\\\n\\\\n基于这个伟大目标，我开启了源码阅读的**“从头到尾读”**系列，目前只完成了**Collection接口、Iterable接口、Iterator接口**这三个章节，正打算开始读**ArrayList**的源码\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1gfw5vx\\\"},{\\\"title\\\":\\\"Java运算符知多少\\\",\\\"categories\\\":[\\\"java\\\",\\\"grammar\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"java\\\",\\\"operator\\\"],\\\"date\\\":\\\"2018-06-03T21:28:00.000Z\\\",\\\"char_count\\\":9591,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n{% cq %}\\\\n\\\\n小心点，一不小心你就栽跟头了 :ghost:\\\\n\\\\n{% endcq%}\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1e5xy16\\\"},{\\\"title\\\":\\\"关于JVM的运行时数据区\\\",\\\"categories\\\":[\\\"java\\\",\\\"jvm\\\",\\\"memory\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2018-06-02T22:48:00.000Z\\\",\\\"tags\\\":[\\\"jvm\\\",\\\"运行时数据区\\\"],\\\"series\\\":\\\"JVM\\\",\\\"char_count\\\":3037,\\\"short_content\\\":\\\"\\\\n\\\\n### 前言\\\\n\\\\n本书第二版为止，其实还是针对于 Java SE 7 Specification（后简称 Spec），然而到了 Java8，情况又有很大的不同，比如最出名的 Permanent Generation，就在 8 中被 HotSpot 虚拟机移除掉了，所以这一系列的文章，我后续还需要慢慢地研究和重写\\\\n\\\\n然后是一篇关于 Java SE 7 Spec 的[好文](http://blog.jamesdbloom.com/JVMInternals.html#threads)\\\\n\\\\n### JVM 运行时数据区\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"rikltc\\\"},{\\\"title\\\":\\\"排序大礼包\\\",\\\"categories\\\":[\\\"algorithm\\\",\\\"sort\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2018-06-02T18:50:00.000Z\\\",\\\"tags\\\":[\\\"algorithm\\\",\\\"sort\\\"],\\\"char_count\\\":16074,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### 术语\\\\n\\\\n**稳定性：**算法排序前后，相同值的元素的相对位置是否不变，变了就不稳定\\\\n\\\\n**在位性：**算法排序是否要借助额外的内存空间，需要就不在位\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1b0rp9e\\\"},{\\\"title\\\":\\\"这，就是Lambda！\\\",\\\"categories\\\":[\\\"java\\\",\\\"grammar\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2018-06-02T10:52:00.000Z\\\",\\\"tags\\\":[\\\"lambda\\\",\\\"java8\\\"],\\\"char_count\\\":8596,\\\"short_content\\\":\\\"\\\\n\\\\n### HelloWorld\\\\n\\\\n昨天的小米笔试题: **请用Lambda写一个将int数组[1,2,3]转换为String数组[\\\\\\\"1\\\\\\\",\\\\\\\"2\\\\\\\",\\\\\\\"3\\\\\\\"]**\\\\n\\\\n当时没写完整，就这个为例作为开始吧, 完整代码如下:\\\\n\\\\n``` java\\\\n  int[] si = {1, 2, 3};\\\\n```\\\\n\\\",\\\"abbrlink\\\":\\\"n0hez3\\\"},{\\\"title\\\":\\\"从头到尾读Iterable与Iterator\\\",\\\"categories\\\":[\\\"java\\\",\\\"collections-framework\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2018-05-15T17:22:14.000Z\\\",\\\"tags\\\":[\\\"iterable\\\",\\\"iterator\\\",\\\"collections-framework\\\"],\\\"series\\\":\\\"从头到尾读\\\",\\\"char_count\\\":2385,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n### Iterable接口\\\\n\\\\n含义: 这个接口的含义是, 容器的元素是否支持**迭代器**访问\\\\n\\\\n#### 源码\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1kakozs\\\"},{\\\"title\\\":\\\"从头到尾读Collection\\\",\\\"categories\\\":[\\\"java\\\",\\\"collections-framework\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2018-05-15T17:17:26.000Z\\\",\\\"tags\\\":[\\\"collection\\\",\\\"collections-framework\\\"],\\\"series\\\":\\\"从头到尾读\\\",\\\"char_count\\\":4653,\\\"short_content\\\":\\\"\\\\n\\\\n### Collection接口\\\\n\\\\n### 源代码解读\\\\n\\\\n#### 头部\\\\n\\\\n``` java\\\\npublic interface Collection<E> extends Iterable<E> {\\\\n```\\\\n\\\",\\\"abbrlink\\\":\\\"faxga5\\\"},{\\\"title\\\":\\\"初探Java8之方法引用\\\",\\\"categories\\\":[\\\"java\\\",\\\"grammar\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2018-05-15T10:40:00.000Z\\\",\\\"tags\\\":[\\\"java8\\\",\\\"方法引用\\\"],\\\"char_count\\\":3828,\\\"short_content\\\":\\\"\\\\n\\\\n{% cq %}\\\\n\\\\n本文从为知笔记迁移过来, 本文的写作时间是 : 2016/10/18 下午1:41:28, 两年前的文章, 言语难免幼稚, 思维难免浅显, 多多包含.\\\\n\\\\n{% endcq %}\\\\n\\\\n > 在学习这个东西的时候，找了很多资料，网上说的也都很笼统，找不到一个比较容易上手的例子，直到我看到一篇文章，作者在整体讲述Java5-8的新特性，其中讲完Java8的lambda表达式之后，马上就讲方法引用这个特性，我才更加清楚的意识到，方法引用其实是比lambda更加简洁的一个语法糖（不知道我这样理解对不对），但是，常识告诉我们，越简单的技术，限制条件就越多，为什么网上的关于方法引用的讲解都很散，因为方法引用的使用条件有点多。\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1bhsyh3\\\"},{\\\"title\\\":\\\"初探Java8之lambda\\\",\\\"categories\\\":[\\\"java\\\",\\\"grammar\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2018-05-15T10:05:00.000Z\\\",\\\"tags\\\":[\\\"java8\\\",\\\"lambda\\\"],\\\"char_count\\\":6126,\\\"short_content\\\":\\\"\\\\n\\\\n{% cq %}\\\\n\\\\n本文从为知笔记迁移过来, 本文的写作时间是 : 2016/10/17 下午12:28:14, 两年前的文章, 言语难免幼稚, 思维难免浅显, 多多包含.\\\\n\\\\n{% endcq %}\\\\n\\\\n### 引例\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"nr7s9o\\\"},{\\\"title\\\":\\\"对持续集成(CI)的一些理解\\\",\\\"tags\\\":[\\\"CI\\\"],\\\"categories\\\":[\\\"thinking\\\"],\\\"date\\\":\\\"2018-05-08T15:53:01.000Z\\\",\\\"char_count\\\":1430,\\\"short_content\\\":\\\"\\\\n\\\\n### 什么是CI\\\\n\\\\n**持续集成（Continuous integration）** 不是什么新概念\\\\n\\\\n> _持续集成是一种软件开发实践，即团队开发成员经常集成他们的工作，通过每个成员每天至少集成一次，也就意味着每天可能会发生多次集成。每次集成都通过自动化的构建（包括编译，发布，自动化测试）来验证，从而尽早地发现集成错误。_\\\\n\\\\n以上引自百度百科的定义。\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"14k0uek\\\"},{\\\"title\\\":\\\"JettyDocument_ZH_CN_Translation_README\\\",\\\"tags\\\":[\\\"jetty\\\",\\\"document\\\",\\\"readme\\\"],\\\"categories\\\":[\\\"translation\\\"],\\\"series\\\":\\\"JettyDocument_ZH_CN_Translation\\\",\\\"date\\\":\\\"2018-05-07T17:30:01.000Z\\\",\\\"char_count\\\":2895,\\\"short_content\\\":\\\"\\\\n\\\\n# Jetty : Servlet Engine and HTTP server\\\\n创立时间：2017年8月25日16:13:49\\\\n\\\\n官方文档地址：http://www.eclipse.org/jetty/documentation/9.4.6.v20170531/\\\\n- - -\\\\nMaven依赖：\\\\n```\\\\n<properties>\\\\n```\\\\n\\\",\\\"abbrlink\\\":\\\"n8gsoq\\\"},{\\\"title\\\":\\\"JettyDocument_ZH_CN_Translation_Part4-23\\\",\\\"tags\\\":[\\\"jetty\\\",\\\"document\\\"],\\\"categories\\\":[\\\"translation\\\"],\\\"series\\\":\\\"JettyDocument_ZH_CN_Translation\\\",\\\"date\\\":\\\"2018-05-07T17:30:01.000Z\\\",\\\"char_count\\\":16093,\\\"short_content\\\":\\\"\\\\n\\\\n<span id=\\\\\\\"top\\\\\\\"></span>\\\\n### Ⅳ. Jetty开发指南-23.Jetty和Maven\\\\n- 23. [Jetty和Maven](#23jetty和maven)\\\\n  - [使用Maven](#231使用maven)\\\\n    - [使用Maven做嵌入式Jetty开发](#2311使用maven做嵌入式jetty开发)\\\\n    - [使用Maven开发标准的WebApp](#2321使用maven开发标准的wabapp)\\\\n  - [配置Jetty的Maven插件](#232配置jetty的maven插件)\\\\n    - [快速开始](#2321快速开始)\\\\n\\\",\\\"abbrlink\\\":\\\"1cei7aq\\\"},{\\\"title\\\":\\\"JettyDocument_ZH_CN_Translation_Part4-21\\\",\\\"tags\\\":[\\\"jetty\\\",\\\"document\\\"],\\\"categories\\\":[\\\"translation\\\"],\\\"series\\\":\\\"JettyDocument_ZH_CN_Translation\\\",\\\"date\\\":\\\"2018-05-07T17:30:01.000Z\\\",\\\"char_count\\\":35483,\\\"short_content\\\":\\\"\\\\n\\\\n<span id=\\\\\\\"top\\\\\\\"></span>\\\\n### Ⅳ. Jetty开发指南-21.嵌入式开发\\\\n  - 21. [嵌入式开发](#21嵌入式开发)\\\\n    - [Jetty的嵌入式Hello World](#211jetty的嵌入式hello-world)\\\\n      - [下载Jar包](#2111下载jar包)\\\\n      - [Hello World栗子](#2112hello-world栗子)\\\\n      - [编译Hello World栗子](#2113编译hello-world栗子)\\\\n      - [运行Handler和Server](#2114运行handler和server)\\\\n\\\",\\\"abbrlink\\\":\\\"18rke1\\\"},{\\\"title\\\":\\\"JettyDocument_ZH_CN_Translation_Part3-13\\\",\\\"tags\\\":[\\\"jetty\\\",\\\"document\\\"],\\\"categories\\\":[\\\"translation\\\"],\\\"series\\\":\\\"JettyDocument_ZH_CN_Translation\\\",\\\"date\\\":\\\"2018-05-07T17:30:01.000Z\\\",\\\"char_count\\\":14125,\\\"short_content\\\":\\\"\\\\n\\\\n<span id=\\\\\\\"top\\\\\\\"></span>\\\\n### Ⅲ. Jetty管理者指南-13.注释\\\\n  - 13. [注解](#13注解)\\\\n    - [快速设置](#131快速设置)\\\\n      - [关于Jetty发行版](#1311关于jetty发行版)\\\\n      - [关于Jetty Maven Plugin](#1312关于jetty-maven-plugin)\\\\n      - [关于嵌入式](#1313关于嵌入式)\\\\n    - [使用注解](#132使用注解)\\\\n\\\",\\\"abbrlink\\\":\\\"cc3kmk\\\"},{\\\"title\\\":\\\"JettyDocument_ZH_CN_Translation_Part1\\\",\\\"tags\\\":[\\\"jetty\\\",\\\"document\\\"],\\\"categories\\\":[\\\"translation\\\"],\\\"series\\\":\\\"JettyDocument_ZH_CN_Translation\\\",\\\"date\\\":\\\"2018-05-07T17:30:01.000Z\\\",\\\"char_count\\\":24839,\\\"short_content\\\":\\\"\\\\n\\\\n### Ⅰ.开始使用Jetty\\\\n<span id=\\\\\\\"top\\\\\\\"></span>\\\\n  - 1. [关于Jetty的介绍](#1关于jetty的介绍)\\\\n    - [什么是Jetty](#11什么是jetty)\\\\n    - [我应该使用哪个版本](#12我应该使用哪个版本)\\\\n    - [Jetty和JavaEE的Web规范](#13jetty和javaee的web规范)\\\\n    - [在Maven里面找到Jetty](#14在maven里面找到jetty)\\\\n  - 2. [使用Jetty](#2使用jetty)\\\\n\\\",\\\"abbrlink\\\":\\\"17hjlts\\\"},{\\\"title\\\":\\\"Cron4jDocument_ZH_CN_Translation\\\",\\\"categories\\\":[\\\"translation\\\"],\\\"tags\\\":[\\\"cron4j\\\",\\\"scheduler\\\"],\\\"series\\\":\\\"Cron4jDocument_ZH_CN_Translation\\\",\\\"date\\\":\\\"2018-05-07T17:25:01.000Z\\\",\\\"char_count\\\":19297,\\\"short_content\\\":\\\"\\\\n\\\\n# Cron4j\\\\n \\\\n一些必要的单词解释：\\\\n1. schedule 安排、调度（安排在有主语的时候使用 调用在没主语的时候使用）\\\\n2. scheduler 调度器\\\\n3. scheduling pattern 调度模式\\\\n4. reschedule 重新调度、安排\\\\n5. action/task 动作/任务\\\\n\\\",\\\"abbrlink\\\":\\\"1ngl1pm\\\"},{\\\"title\\\":\\\"Cron4jDocument_ZH_CN_Translation_README\\\",\\\"categories\\\":[\\\"translation\\\"],\\\"tags\\\":[\\\"cron4j\\\",\\\"scheduler\\\",\\\"readme\\\"],\\\"series\\\":\\\"Cron4jDocument_ZH_CN_Translation\\\",\\\"date\\\":\\\"2018-05-07T17:12:01.000Z\\\",\\\"char_count\\\":2323,\\\"short_content\\\":\\\"\\\\n\\\\n# Cron4j : A pure Java cron-like scheduler\\\\n创立时间：2017年8月20日13:35:01\\\\n\\\\n官方文档地址：http://www.sauronsoftware.it/projects/cron4j/\\\\n- - -\\\\nMaven依赖：\\\\n```\\\\n<dependency>\\\\n```\\\\n\\\",\\\"abbrlink\\\":\\\"19jo7o1\\\"},{\\\"title\\\":\\\"Linux安装MySql\\\",\\\"categories\\\":[\\\"reprinted\\\"],\\\"tags\\\":[\\\"mysql\\\",\\\"linux\\\"],\\\"date\\\":\\\"2018-05-03T16:05:01.000Z\\\",\\\"char_count\\\":3195,\\\"short_content\\\":\\\"\\\\n\\\\n\\\\n\\\\n# Linux安装MySql\\\\n一位哲人说过，只会用 FTP 工具的人都是傻子。\\\\n## 原料\\\\n去 [Mysql官网](https://www.mysql.com/downloads/) 下载\\\\nmysql-5.7.19-linux-glibc2.12x86_64.tar.gz。\\\\n## 步骤\\\\n\\\",\\\"abbrlink\\\":\\\"spovqu\\\"},{\\\"title\\\":\\\"蓝桥杯Java一夜暴富\\\",\\\"categories\\\":[\\\"note\\\"],\\\"comments\\\":false,\\\"tags\\\":[\\\"蓝桥杯\\\"],\\\"date\\\":\\\"2018-03-30T16:59:43.000Z\\\",\\\"char_count\\\":13539,\\\"short_content\\\":\\\"\\\\n\\\\n#### 目录\\\\n\\\\n- eclipse 快捷键\\\\n- 数组的使用\\\\n- 初始化\\\\n- for-each 遍历\\\\n- 使用底层 API 快速复制\\\\n- 搭配 Arrays 类进行二分查找和排序\\\\n\\\",\\\"abbrlink\\\":\\\"mtg94p\\\"},{\\\"title\\\":\\\"CentOS7下安装Pillow并使用osm-bundler生成图点模型\\\",\\\"categories\\\":[\\\"note\\\",\\\"project\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"centos7\\\",\\\"python\\\",\\\"Pillow\\\",\\\"osm-bundler\\\",\\\"pip\\\"],\\\"date\\\":\\\"2018-01-21T11:50:30.000Z\\\",\\\"char_count\\\":5619,\\\"short_content\\\":\\\"\\\\n\\\\n{% cq %}\\\\n前言：之前留下的 17 大创项目总得做点什么，马上就要结题了，我们做的 AR 留影需要将用户照下来的照片生成点云然后合成模型。由此 Escnqh[link:gayhub]找到了使用 PIL+osm-bundler 的解决方案。\\\\n{% endcq %}\\\\n\\\\n<!-- more -->\\\\n\\\\n### Python Photogrammetry ToolKit（PPT）\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1ox3j6i\\\"},{\\\"title\\\":\\\"Log4j2_Lookups\\\",\\\"categories\\\":[\\\"java\\\",\\\"lib\\\",\\\"log4j\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"log4j2\\\",\\\"learning\\\"],\\\"date\\\":\\\"2017-12-09T15:28:15.000Z\\\",\\\"series\\\":\\\"Log4j2\\\",\\\"char_count\\\":1520,\\\"short_content\\\":\\\"\\\\n\\\\n{% cq %}\\\\n\\\\nLookups：让你的配置更灵活\\\\n\\\\n{% endcq %}\\\\n\\\\n<!-- more -->\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"3zxt7z\\\"},{\\\"title\\\":\\\"Log4j2_Filters\\\",\\\"categories\\\":[\\\"java\\\",\\\"lib\\\",\\\"log4j\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"log4j2\\\",\\\"learning\\\"],\\\"date\\\":\\\"2017-12-09T12:41:20.000Z\\\",\\\"series\\\":\\\"Log4j2\\\",\\\"char_count\\\":2384,\\\"short_content\\\":\\\"\\\\n\\\\n{% cq %}\\\\n\\\\nFilters：过滤你的日志信息\\\\n\\\\n{% endcq %}\\\\n\\\\n<!-- more -->\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"3fjm8j\\\"},{\\\"title\\\":\\\"Log4j2_Layouts\\\",\\\"categories\\\":[\\\"java\\\",\\\"lib\\\",\\\"log4j\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"log4j2\\\"],\\\"date\\\":\\\"2017-12-08T14:39:16.000Z\\\",\\\"series\\\":\\\"Log4j2\\\",\\\"char_count\\\":1187,\\\"short_content\\\":\\\"\\\\n\\\\n{% cq %}\\\\n\\\\nLayout：定制你的输出模式\\\\n\\\\n{% endcq %}\\\\n\\\\n<!-- more -->\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"yvgzwi\\\"},{\\\"title\\\":\\\"我认为的规范的git commit msg\\\",\\\"top\\\":true,\\\"categories\\\":[\\\"thinking\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"tips\\\",\\\"github\\\",\\\"git\\\"],\\\"date\\\":\\\"2017-11-29T18:30:01.000Z\\\",\\\"char_count\\\":2664,\\\"short_content\\\":\\\"\\\\n\\\\n{% cq %}\\\\n\\\\n其实必要的时候使用`git commit -m \\\\\\\"xxxxx\\\\\\\"`也木有关系 但你也别每条都这样写\\\\n\\\\n{% endcq %}\\\\n\\\\n<!-- more -->\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"a9wle2\\\"},{\\\"title\\\":\\\"Electron_打包你的HelloWorld为exe\\\",\\\"categories\\\":[\\\"front-end\\\",\\\"electron\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"electron\\\",\\\"helloworld\\\"],\\\"series\\\":\\\"electron\\\",\\\"date\\\":\\\"2017-11-23T13:02:21.000Z\\\",\\\"char_count\\\":5464,\\\"short_content\\\":\\\"\\\\n\\\\n{% cq %}\\\\n\\\\nEXE 什么的，看着就忍不住要双击它！\\\\n\\\\n{% endcq %}\\\\n\\\\n### Introduction\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1q1lo3l\\\"},{\\\"title\\\":\\\"Electron_一个HelloWorld\\\",\\\"categories\\\":[\\\"front-end\\\",\\\"electron\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"electron\\\",\\\"helloworld\\\"],\\\"series\\\":\\\"electron\\\",\\\"date\\\":\\\"2017-11-22T22:05:23.000Z\\\",\\\"char_count\\\":4803,\\\"short_content\\\":\\\"\\\\n\\\\n{% cq %}\\\\n\\\\n惊！仅用前端技术就可以打造跨平台桌面应用！\\\\n\\\\n{% endcq %}\\\\n\\\\n### 快速入门\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"a08lib\\\"},{\\\"title\\\":\\\"Log4j2_Appenders\\\",\\\"comments\\\":true,\\\"tags\\\":[\\\"log4j\\\"],\\\"categories\\\":[\\\"java\\\",\\\"lib\\\",\\\"log4j\\\"],\\\"date\\\":\\\"2017-11-17T16:37:18.000Z\\\",\\\"series\\\":\\\"Log4j2\\\",\\\"char_count\\\":6004,\\\"short_content\\\":\\\"\\\\n\\\\n{% cq %}\\\\n\\\\n上篇介绍了使用Log4j2之前的准备工作和简单介绍了一个HelloWorld\\\\n\\\\n现在我们来了解配置中的第一个关键配置：Appenders\\\\n\\\\n{% endcq %}\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"nff3ic\\\"},{\\\"title\\\":\\\"Log4j2_HelloWorld\\\",\\\"tags\\\":[\\\"log4j2\\\"],\\\"categories\\\":[\\\"java\\\",\\\"lib\\\",\\\"log4j\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2017-11-17T16:13:21.000Z\\\",\\\"series\\\":\\\"Log4j2\\\",\\\"char_count\\\":3621,\\\"short_content\\\":\\\"\\\\n\\\\n{% cq %}\\\\n\\\\nLo4j2是啥就不解释了，之前无论是使用log4j还是log4j2，同样只是简单的各种百度然后复制粘贴没有系统的总结一下，今天把一个小小的Ajax的测试程序放服务器上面都不知道怎么查错，然后想写一下log来看看哪错了吧，发现还是不会独立配置log4j，于是想总结一波。基本的思路是总结官方文档和官方推荐的中文文档，尽量简洁表达出原理以及应用。\\\\n\\\\n{% endcq %}\\\\n\\\\n<!-- more -->\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"en4hhw\\\"},{\\\"title\\\":\\\"RegExp_2_metacharacters\\\",\\\"categories\\\":[\\\"booknotes\\\",\\\"Mastering Regular Expression\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"regular-expression\\\"],\\\"date\\\":\\\"2017-11-17T00:02:06.000Z\\\",\\\"series\\\":\\\"《Mastering Regular Expression(Third Edition)》\\\",\\\"char_count\\\":2336,\\\"short_content\\\":\\\"\\\\n\\\\n{% cq %}\\\\n\\\\nMetacharacters：元字符\\\\n\\\\n{% endcq %}\\\\n\\\\n<!-- more -->\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"huiysg\\\"},{\\\"title\\\":\\\"RegExp_1_overview\\\",\\\"tags\\\":[\\\"regular-expression\\\"],\\\"categories\\\":[\\\"booknotes\\\",\\\"Mastering Regular Expression\\\"],\\\"comments\\\":true,\\\"date\\\":\\\"2017-11-17T00:00:56.000Z\\\",\\\"series\\\":\\\"《Mastering Regular Expression(Third Edition)》\\\",\\\"char_count\\\":1284,\\\"short_content\\\":\\\"\\\\n\\\\n*自接触计算机编程以来，无数次碰到过这个名词“正则表达式”，刚开始肯定是不懂，但是听到“表达式”三个字就发现事情并不简单。*\\\\n\\\\n<!-- more -->\\\\n\\\\n第一次接触到它还是在我进NTJ2EE的招新机试的时候，机试题有一道题：“有一个字符串，其中包含中文字符、英文字符和数字字符，请统计和打印出各个字符的个数。”，当时只会用取字符对照ascii的方法来做这道题，然后正好学长看了我的做法，他说还有种东西叫做“正则表达式”，然后他给我打开了在线的JDK-1.6的API，找到了里面介绍正则表达式的页，然后还百度了一篇正则表达式的教程给我看（对，就是那个通篇斜杠写反的那盘），然后我就头皮发麻了。\\\\n\\\\n在之后无论是正式学习还是运用到实际当中，我的处理都是：百度——ctrl+c——ctrl+v，然后下次碰到另一个字符串处理问题的时候还是这样做，毫无意义，甚至还不能完全匹配我的应用场景。然后这次的工程中心项目，我负责写前端，对输入框需要用到字符串过滤的需求，就这么简单的一个功能我都实现不了，感觉非常丢人，我不想再复制粘贴了，所以开始以blog的形式记录我学习`regular-expression`的过程。\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1k4djcz\\\"},{\\\"title\\\":\\\"5 Useful Tips For A Better Commit Message\\\",\\\"categories\\\":[\\\"reprinted\\\"],\\\"comments\\\":true,\\\"tags\\\":[\\\"tips\\\",\\\"github\\\",\\\"git\\\"],\\\"date\\\":\\\"2017-11-15T16:59:00.000Z\\\",\\\"char_count\\\":3603,\\\"short_content\\\":\\\"\\\\n\\\\nYou’re already writing decent commit messages. Let’s see if we can level you up to awesome. Other developers, especially you-in-two-weeks and you-from-next-year, will thank you for your forethought and verbosity when they run git blame to see why that conditional is there.\\\\n\\\\n<!-- more -->\\\\n\\\\n1. The first line should always be <u>50 characters</u> or less and that it should be followed by a blank line. Vim ships with syntax, indent, and filetype plugins for Git commits which can help here.\\\\n\\\\n1. Add this line to your `~/.vimrc` to add spell checking and automatic wrapping at the recommended 72 columns to you commit messages.\\\\n\\\\n\\\",\\\"abbrlink\\\":\\\"1h187i6\\\"}]\");\n    sessionStorage.setItem('postOrder', \"[\\\"Connecting ModelSIM with Vscode & XQuartz on Mac<=>xqh6xg\\\",\\\"了解前缀树<=>ooqfkn\\\",\\\"带状态机的DP<=>f40uwq\\\",\\\"再聊InnoDB索引<=>1lvzuh7\\\",\\\"MySQL InnoDB锁概述<=>dc5shg\\\",\\\"MySQL InnoDB事务概述<=>tx6g0p\\\",\\\"MySQL InnoDB索引概述<=>a0p0f4\\\",\\\"优先队列&二叉堆（2-heap）<=>2t44ld\\\",\\\"MySQL InnoDB引擎概述<=>xfjqry\\\",\\\"Python - Threading<=>2acnhf\\\",\\\"The Basic Grammar Of Python (EF)<=>1xentt\\\",\\\"The Basic Grammar Of Python (CD)<=>1ba9tuk\\\",\\\"The Basic Grammar Of Python (AB)<=>t3owl3\\\",\\\"Make Your Raspberry Pi Broadcasting TV News Every Morning<=>1xemds8\\\",\\\"Interesting Math - Prime Number<=>1jy4sem\\\",\\\"微信小程序支付后台接入<=>1csh4qm\\\",\\\"一次博客的改版和升级<=>3rmqph\\\",\\\"字符编码笔记<=>1w60zyo\\\",\\\"Electron_UI<=>kimeni\\\",\\\"Electron_配置相关与对象<=>1y7ozg8\\\",\\\"Electron_上手铺垫<=>11zuc81\\\",\\\"Express Middleware<=>1tzsbbu\\\",\\\"Express Routing<=>1n8vn13\\\",\\\"Understanding the nodejs' event loop<=>1w97yet\\\",\\\"GC Algorithm Implementation<=>1jvfs4t\\\",\\\"Leetcode-71~75<=>i9becb\\\",\\\"Leetcode-66~70<=>z9pvg9\\\",\\\"Leetcode-61~65<=>1cu6q2d\\\",\\\"Leetcode-56~60<=>1kv61wq\\\",\\\"Leetcode-51~55<=>xmbex2\\\",\\\"Leetcode-46~50<=>jywoys\\\",\\\"Some Backtracking Problem In Leetcode<=>1x7azit\\\",\\\"DP Again<=>1flo1c0\\\",\\\"Leetcode-41~45<=>11z93zc\\\",\\\"Leetcode-36~40<=>v6ei19\\\",\\\"再谈对象分代和GC事件<=>wlvrl9\\\",\\\"字节跳动2019-03-16后端笔试<=>djlqql\\\",\\\"Leetcode-31~35<=>dbne5d\\\",\\\"Leetcode-26~30<=>448jer\\\",\\\"Leetcode-21~25<=>1hrw4sv\\\",\\\"Leetcode-16~20<=>3yl2hx\\\",\\\"Help GC A Favor & JIT Introduction<=>12iaggv\\\",\\\"Java's Refernece<=>13tt0au\\\",\\\"The Revelation of Java String<=>46bhg0\\\",\\\"Leetcode-11~15<=>2gps3g\\\",\\\"最近点对及其相关问题<=>1d9upzt\\\",\\\"Leetcode-6~10<=>t1f0vq\\\",\\\"Hashing<=>1f3qusx\\\",\\\"Leetcode-1~5<=>pn2ezr\\\",\\\"Tree Binary Tree<=>1aew5v7\\\",\\\"Tree Introduction<=>1qvt6fv\\\",\\\"Java并发编程第八坎<=>1u7rv30\\\",\\\"CLH Lock Queue<=>vywf17\\\",\\\"Java并发编程第七坎-2<=>u4sgci\\\",\\\"Java并发编程第七坎<=>7kdfk8\\\",\\\"Docker Volumes<=>1ae6lng\\\",\\\"Docker Persist Data Overview<=>lt42s8\\\",\\\"Docker ConceptReview<=>rx7jt4\\\",\\\"Docker Stack<=>u7sd0w\\\",\\\"Docker Swarm&ClusterSetup<=>1toixsk\\\",\\\"Docker Service&Composefile<=>zkr55u\\\",\\\"Jenkins Introductions&Setup<=>1arzjog\\\",\\\"写在21岁的最后一天<=>1xetsy3\\\",\\\"关于JVM的GC行为和内存分配<=>jhpq7e\\\",\\\"Docker Containers&Dockerfile<=>uh480l\\\",\\\"Tess login on Jenkins<=>1gukab6\\\",\\\"Introductions of eBay Tess<=>2032k5\\\",\\\"关于JVM的运行时数据区上的GC<=>d5ykz8\\\",\\\"关于JVM的对象创建与访问<=>18669ga\\\",\\\"Docker Orientation&Setup<=>1ei198o\\\",\\\"kafka-topic-storage-detail<=>1ro5m3y\\\",\\\"kafka-helloworld-concept<=>u28b7l\\\",\\\"微服务架构理论基础-康威定律<=>pjff39\\\",\\\"微服务（Microservice）那点事<=>1kb6gry\\\",\\\"Graduation Design<=>q0aas8\\\",\\\"地痞（DP）成长记<=>188zp6j\\\",\\\"AVL树和红黑树<=>wji6g0\\\",\\\"查找大礼包<=>bg6w8m\\\",\\\"把HashMap安排得明明白白<=>ofa68o\\\",\\\"算法回收站<=>8lcrnu\\\",\\\"记一次设计模式之旅<=>9h3hmp\\\",\\\"Java并发编程第六坎<=>139027a\\\",\\\"Java并发编程第五坎<=>1xo3tpx\\\",\\\"Java并发编程第四坎<=>db3vx3\\\",\\\"Java并发编程第三坎<=>1h1ww1y\\\",\\\"Java并发编程第二坎<=>1clnpuk\\\",\\\"计算机网络-谢希仁-2<=>1nz333d\\\",\\\"计算机网络-谢希仁-1<=>1k7g0p3\\\",\\\"Java并发编程第一坎<=>bu9klx\\\",\\\"从头到尾读ArrayList<=>rku8jh\\\",\\\"自实现ArrayList<=>1gfw5vx\\\",\\\"Java运算符知多少<=>1e5xy16\\\",\\\"关于JVM的运行时数据区<=>rikltc\\\",\\\"排序大礼包<=>1b0rp9e\\\",\\\"这，就是Lambda！<=>n0hez3\\\",\\\"从头到尾读Iterable与Iterator<=>1kakozs\\\",\\\"从头到尾读Collection<=>faxga5\\\",\\\"初探Java8之方法引用<=>1bhsyh3\\\",\\\"初探Java8之lambda<=>nr7s9o\\\",\\\"对持续集成(CI)的一些理解<=>14k0uek\\\",\\\"JettyDocument_ZH_CN_Translation_README<=>n8gsoq\\\",\\\"JettyDocument_ZH_CN_Translation_Part4-23<=>1cei7aq\\\",\\\"JettyDocument_ZH_CN_Translation_Part4-21<=>18rke1\\\",\\\"JettyDocument_ZH_CN_Translation_Part3-13<=>cc3kmk\\\",\\\"JettyDocument_ZH_CN_Translation_Part1<=>17hjlts\\\",\\\"Cron4jDocument_ZH_CN_Translation<=>1ngl1pm\\\",\\\"Cron4jDocument_ZH_CN_Translation_README<=>19jo7o1\\\",\\\"Linux安装MySql<=>spovqu\\\",\\\"蓝桥杯Java一夜暴富<=>mtg94p\\\",\\\"CentOS7下安装Pillow并使用osm-bundler生成图点模型<=>1ox3j6i\\\",\\\"Log4j2_Lookups<=>3zxt7z\\\",\\\"Log4j2_Filters<=>3fjm8j\\\",\\\"Log4j2_Layouts<=>yvgzwi\\\",\\\"我认为的规范的git commit msg<=>a9wle2\\\",\\\"Electron_打包你的HelloWorld为exe<=>1q1lo3l\\\",\\\"Electron_一个HelloWorld<=>a08lib\\\",\\\"Log4j2_Appenders<=>nff3ic\\\",\\\"Log4j2_HelloWorld<=>en4hhw\\\",\\\"RegExp_2_metacharacters<=>huiysg\\\",\\\"RegExp_1_overview<=>1k4djcz\\\",\\\"5 Useful Tips For A Better Commit Message<=>1h187i6\\\"]\");\n    sessionStorage.setItem('scriptsMds', \"{\\\"Academic Website\\\":\\\"cb48f8a4\\\",\\\"CSS\\\":\\\"365a1777\\\",\\\"Docker\\\":\\\"8c6a1638\\\",\\\"ECE\\\":\\\"f5916bab\\\",\\\"Electron\\\":\\\"79da6013\\\",\\\"English Termiologies\\\":\\\"befb463a\\\",\\\"FE Engineering Related\\\":\\\"fbc08f90\\\",\\\"HTML\\\":\\\"a4690ebd\\\",\\\"JS&Node.js库\\\":\\\"9b96de31\\\",\\\"JS\\\":\\\"a586ccf8\\\",\\\"Java\\\":\\\"e3e877fe\\\",\\\"LaTeX\\\":\\\"56fa014a\\\",\\\"Linux\\\":\\\"26535a\\\",\\\"MAC\\\":\\\"4669e57a\\\",\\\"MySQL\\\":\\\"58be3d4b\\\",\\\"Open API\\\":\\\"76024c57\\\",\\\"Python\\\":\\\"b3001d81\\\",\\\"Software Engineering\\\":\\\"b09cec40\\\",\\\"Vue\\\":\\\"fe80f986\\\",\\\"坑\\\":\\\"737e95b3\\\",\\\"技巧\\\":\\\"79453be7\\\",\\\"操作系统原理\\\":\\\"c72c09e6\\\",\\\"概念与思考\\\":\\\"edefab81\\\",\\\"算法\\\":\\\"984d050c\\\",\\\"网站&博客\\\":\\\"7d0d4b58\\\",\\\"网络\\\":\\\"8f8dd110\\\",\\\"软件\\\":\\\"e173fd3a\\\"}\");\n","sessionStorage.setItem('codeThemeCss', \"[\\\"a11y-dark\\\",\\\"a11y-light\\\",\\\"agate\\\",\\\"an-old-hope\\\",\\\"androidstudio\\\",\\\"arduino-light\\\",\\\"arta\\\",\\\"ascetic\\\",\\\"atom-one-dark-reasonable\\\",\\\"atom-one-dark\\\",\\\"atom-one-light\\\",\\\"codepen-embed\\\",\\\"color-brewer\\\",\\\"dark\\\",\\\"default\\\",\\\"devibeans\\\",\\\"docco\\\",\\\"far\\\",\\\"foundation\\\",\\\"github-dark-dimmed\\\",\\\"github-dark\\\",\\\"github\\\",\\\"gml\\\",\\\"googlecode\\\",\\\"gradient-dark\\\",\\\"gradient-light\\\",\\\"grayscale\\\",\\\"hybrid\\\",\\\"idea\\\",\\\"ir-black\\\",\\\"isbl-editor-dark\\\",\\\"isbl-editor-light\\\",\\\"kimbie-dark\\\",\\\"kimbie-light\\\",\\\"lightfair\\\",\\\"lioshi\\\",\\\"magula\\\",\\\"mono-blue\\\",\\\"monokai-sublime\\\",\\\"monokai\\\",\\\"night-owl\\\",\\\"nnfx-dark\\\",\\\"nnfx-light\\\",\\\"nord\\\",\\\"obsidian\\\",\\\"paraiso-dark\\\",\\\"paraiso-light\\\",\\\"pojoaque\\\",\\\"purebasic\\\",\\\"qtcreator-dark\\\",\\\"qtcreator-light\\\",\\\"rainbow\\\",\\\"routeros\\\",\\\"school-book\\\",\\\"shades-of-purple\\\",\\\"srcery\\\",\\\"stackoverflow-dark\\\",\\\"stackoverflow-light\\\",\\\"sunburst\\\",\\\"tomorrow-night-blue\\\",\\\"tomorrow-night-bright\\\",\\\"vs\\\",\\\"vs2015\\\",\\\"xcode\\\",\\\"xt256\\\"]\");","/* eslint-disable no-unused-vars */\nvar resourcesList = [\"cache-tp77vm.js\",\"code-theme-css-ef37e5d9.js\"];\nmodule.exports.list = resourcesList\n  ","<template>\n  <n-config-provider :theme=\"theme\">\n    <TopBar />\n    <n-card\n      class=\"main animate__animated animate__fadeIn\"\n      :bordered=\"false\"\n      content-style=\"padding: 0;\"\n    >\n      <router-view v-slot=\"{ Component }\">\n        <transition name=\"fade3\" mode=\"out-in\">\n          <component class=\"page\" :is=\"Component\" />\n        </transition>\n      </router-view>\n    </n-card>\n    <n-global-style />\n  </n-config-provider>\n</template>\n\n<script>\nimport TopBar from \"@/components/TopBar.vue\";\nimport { NConfigProvider, NCard, NGlobalStyle, darkTheme } from \"naive-ui\";\n\nexport default {\n  name: \"App\",\n  data: () => ({}),\n  computed: {\n    theme() {\n      return this.$store.state.currentThemeConfig.darkTheme ? darkTheme : null;\n    },\n  },\n  components: {\n    NCard,\n    TopBar,\n    NConfigProvider,\n    NGlobalStyle,\n  },\n  mounted() {\n    const pre = document.getElementById(\"preLoadingBodyCssElement\");\n    if (pre !== null) pre.remove();\n  },\n};\n</script>\n\n<style scoped lang=\"less\">\n@import \"../src/assets/css/variables.less\";\n.main {\n  margin: auto;\n  top: 42px;\n  border-radius: 0;\n  animation-delay: 0.35s;\n}\n\n.page {\n  max-width: @page-max-width;\n  margin-top: 1rem !important;\n  margin-bottom: 10rem !important;\n  margin: auto;\n  backface-visibility: hidden;\n}\n</style>\n","<template>\n  <n-card\n    class=\"top-bar animate__animated animate__fadeIn\"\n    :bordered=\"false\"\n    content-style=\"padding: 0;\"\n  >\n    <n-space class=\"tab-box unselectable\" justify=\"start\">\n      <n-tabs\n        class=\"tabs\"\n        :value=\"tabValue\"\n        type=\"line\"\n        size=\"small\"\n        tab-style=\"width: 50px; justify-content: center;\"\n      >\n        <n-tab\n          v-for=\"tab in tabs\"\n          :key=\"tab.name\"\n          :name=\"tab.name\"\n          @click=\"goTo(tab)\"\n          >{{ tab.text }}\n        </n-tab>\n      </n-tabs>\n      <div class=\"github-box\">\n        <n-tooltip\n          placement=\"bottom-end\"\n          trigger=\"click\"\n          display-directive=\"show\"\n          :delay=\"0\"\n          :style=\"{ width: '200px' }\"\n        >\n          <template #trigger>\n            <n-button ghost type=\"tertiary\">\n              <template v-slot:icon>\n                <n-icon :size=\"20\"><brand-github /></n-icon>\n              </template>\n            </n-button>\n          </template>\n          <div class=\"setting-item\">\n            <div\n              style=\"\n                margin-right: 10px;\n                display: inline-block;\n                width: 79px;\n                text-align: end;\n              \"\n            >\n              Theme:\n            </div>\n            <n-switch\n              style=\"width: 111px\"\n              :value=\"themeValue\"\n              @update:value=\"themeSwitchHandle\"\n            >\n              <template #checked>Light</template>\n              <template #unchecked>Dark</template>\n            </n-switch>\n          </div>\n          <div class=\"setting-item\">\n            <div style=\"margin-top: 10px; margin-bottom: 5px\">Code theme:</div>\n            <n-select\n              :value=\"codeThemeValue\"\n              :options=\"codeThemeOptions\"\n              size=\"small\"\n              :virtual-scroll=\"false\"\n              @update:value=\"codeThemeSelectHandle\"\n            />\n          </div>\n          <div style=\"margin-top: 15px\" class=\"setting-item\">\n            <n-button\n              :style=\"{ width: '100%', padding: '0' }\"\n              type=\"success\"\n              tag=\"a\"\n              href=\"https://github.com/youyinnn\"\n              target=\"_blank\"\n              >Visit My Github</n-button\n            >\n          </div>\n        </n-tooltip>\n      </div>\n    </n-space>\n  </n-card>\n</template>\n\n<script>\n/* eslint-disable vue/no-unused-components */\nimport { BrandGithub } from \"@vicons/tabler\";\nimport {\n  NTabs,\n  NTab,\n  NSpace,\n  NCard,\n  NGradientText,\n  NIcon,\n  NButton,\n  NTooltip,\n  NSwitch,\n  NSelect,\n} from \"naive-ui\";\n\nconst tabList = [\n  {\n    name: \"about\",\n    text: \"About\",\n    route: \"/\",\n  },\n  {\n    name: \"articles\",\n    text: \"Articles\",\n    route: \"/articles\",\n  },\n  {\n    name: \"script\",\n    text: \"Script\",\n    route: \"/script\",\n  },\n];\n\nexport default {\n  name: \"TopBar\",\n  components: {\n    NCard,\n    NTabs,\n    NTab,\n    NSpace,\n    // eslint-disable-next-line vue/no-unused-components\n    NGradientText,\n    NIcon,\n    BrandGithub,\n    NButton,\n    NTooltip,\n    NSwitch,\n    NSelect,\n  },\n  data: () => ({\n    tabs: tabList,\n    adjustTimer: 0,\n    document,\n    codeThemeOptions: [\n      {\n        label: \"Github\",\n        value: \"github\",\n      },\n      {\n        label: \"Github-Dark\",\n        value: \"github-dark\",\n      },\n    ],\n  }),\n  methods: {\n    goTo(tab) {\n      this.$store.commit(\"tabChange\", {\n        tab: tab.name,\n      });\n      this.$router.push(tab.route).catch(() => {});\n    },\n    getPageWidth() {\n      const pageEl = document.getElementsByClassName(\"page\");\n      if (pageEl.length >= 1) {\n        return document.getElementsByClassName(\"page\")[0].clientWidth;\n      } else {\n        return this.getWinWidth();\n      }\n    },\n    getWinWidth: function () {\n      let winWidth = 0;\n      if (window.innerWidth) winWidth = window.innerWidth;\n      else if (document.body && document.body.clientWidth)\n        winWidth = document.body.clientWidth;\n      return winWidth;\n    },\n    adjustTabWidth() {\n      document.getElementsByClassName(\"tabs\")[0].style.width =\n        this.getPageWidth() - 90 + \"px\";\n    },\n    themeSwitchHandle(value) {\n      if (!value) {\n        this.$store.commit(\"changeThemeConfig\", {\n          darkTheme: true,\n          codeTheme: this.codeThemeValue,\n        });\n      } else {\n        this.$store.commit(\"changeThemeConfig\", {\n          darkTheme: false,\n          codeTheme: this.codeThemeValue,\n        });\n      }\n    },\n    codeThemeSelectHandle(value) {\n      this.$store.commit(\"changeThemeConfig\", {\n        darkTheme: this.$store.state.currentThemeConfig.darkTheme,\n        codeTheme: value,\n      });\n    },\n  },\n  computed: {\n    tabValue() {\n      return this.$store.state.currentTab;\n    },\n    themeValue() {\n      return !this.$store.state.currentThemeConfig.darkTheme;\n    },\n    codeThemeValue() {\n      return this.$store.state.currentThemeConfig.codeTheme;\n    },\n  },\n  mounted: function () {\n    clearTimeout(this.adjustTimer);\n    this.adjustTimer = setTimeout(() => {\n      this.adjustTabWidth();\n      window.onresize = () => {\n        this.adjustTabWidth();\n      };\n      if (screen !== undefined && screen.orientation !== undefined) {\n        screen.orientation.onchange = () => {\n          this.adjustTabWidth();\n        };\n      } else {\n        window.onorientationchange = () => {\n          this.adjustTabWidth();\n        };\n      }\n    }, 300);\n    const codeThemeCssFile = JSON.parse(sessionStorage.codeThemeCss);\n    const codeThemeCssFileList = [];\n    for (let cssFile of codeThemeCssFile) {\n      codeThemeCssFileList.push({\n        label: cssFile,\n        value: cssFile,\n      });\n    }\n    this.codeThemeOptions = codeThemeCssFileList;\n  },\n};\n</script>\n\n<style scoped lang=\"less\">\n@import \"../assets/css/index.less\";\n\n.top-bar {\n  position: absolute;\n  margin: auto;\n  right: 0;\n  left: 0;\n  top: 0;\n  height: @top-bar-height;\n  border-radius: 0;\n  // background-color: aquamarine;\n  animation-delay: 0.2s;\n}\n\n.tab-box {\n  position: absolute;\n  margin: auto;\n  right: 0;\n  left: 0;\n  margin-top: 1rem !important;\n  max-width: @page-max-width;\n  padding: 0 1rem;\n  height: 40px;\n}\n.tabs {\n  width: 300px;\n  position: absolute;\n  transition: all 0.5s;\n}\n.github-box {\n  position: absolute;\n  right: 0;\n  top: 0;\n  margin: auto;\n  bottom: 0;\n  margin-right: 1rem;\n}\n.setting-item {\n  margin: 5px 0;\n}\n</style>\n\n<style>\n.n-switch__rail {\n  width: 100%;\n}\n.n-switch .n-switch__unchecked {\n  padding-left: 42px;\n}\n.n-switch .n-switch__checked {\n  padding-right: 42px;\n}\n/* .n-tabs-tab__label {\n  color: rgb(66, 69, 109) !important;\n}\n.n-tabs-bar {\n  background-color: rgb(66, 69, 109) !important; */\n/* } */\n</style>\n","import { render } from \"./TopBar.vue?vue&type=template&id=28aba3c2&scoped=true\"\nimport script from \"./TopBar.vue?vue&type=script&lang=js\"\nexport * from \"./TopBar.vue?vue&type=script&lang=js\"\n\nimport \"./TopBar.vue?vue&type=style&index=0&id=28aba3c2&scoped=true&lang=less\"\nimport \"./TopBar.vue?vue&type=style&index=1&id=28aba3c2&lang=css\"\n\nimport exportComponent from \"/Users/yinnnyou/workspace/youyinnn.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-28aba3c2\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=7229b153&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=7229b153&scoped=true&lang=less\"\n\nimport exportComponent from \"/Users/yinnnyou/workspace/youyinnn.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7229b153\"]])\n\nexport default __exports__","var __WEBPACK_NAMESPACE_OBJECT__ = VueRouter;","import { createRouter, createWebHistory } from \"vue-router\";\n\nconst routes = [\n  {\n    path: \"/articles\",\n    name: \"Home\",\n    component: () =>\n      import(/* webpackChunkName: \"about\" */ \"../views/Home.vue\"),\n  },\n  {\n    path: \"/script\",\n    name: \"ScriptInitial\",\n    component: () =>\n      import(/* webpackChunkName: \"about\" */ \"../views/Script.vue\"),\n  },\n  {\n    path: \"/script/:scriptId\",\n    name: \"Script\",\n    component: () =>\n      import(/* webpackChunkName: \"about\" */ \"../views/Script.vue\"),\n  },\n  {\n    path: \"/article/:articleId\",\n    name: \"Article\",\n    component: () =>\n      import(/* webpackChunkName: \"about\" */ \"../views/Article.vue\"),\n  },\n  {\n    path: \"/\",\n    name: \"About\",\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () =>\n      import(/* webpackChunkName: \"about\" */ \"../views/About.vue\"),\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\nexport default router;\n","var __WEBPACK_NAMESPACE_OBJECT__ = Vuex;","import { createStore } from \"vuex\";\n\nconst pathName = location.pathname;\nvar initialRoute = \"about\";\n\nif (pathName.startsWith(\"/article\")) {\n  initialRoute = \"articles\";\n}\nif (pathName.startsWith(\"/script\")) {\n  initialRoute = \"script\";\n}\n\nconst initialCurrentThemeConfig = localStorage.getItem(\"__currentThemeConfig\");\n\nexport default createStore({\n  state: {\n    currentTab: initialRoute,\n    currentThemeConfig:\n      initialCurrentThemeConfig === null\n        ? {\n            darkTheme: true,\n            codeTheme: \"github-dark-dimmed\",\n          }\n        : JSON.parse(initialCurrentThemeConfig),\n  },\n  mutations: {\n    tabChange(state, payload) {\n      state.currentTab = payload.tab;\n    },\n    changeThemeConfig(state, payload) {\n      if (payload.codeTheme === undefined) {\n        payload.codeTheme = state.currentThemeConfig.codeTheme;\n      }\n      state.currentThemeConfig = payload;\n      localStorage.setItem(\n        \"__currentThemeConfig\",\n        JSON.stringify(state.currentThemeConfig)\n      );\n    },\n  },\n  actions: {},\n  modules: {},\n});\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport store from \"./store\";\n\nimport \"vfonts/Lato.css\";\nimport \"./assets/css/index.less\";\nimport \"animate.css\";\nimport resources from \"@/assets/resources/resources.js\";\n\nif (sessionStorage.getItem(\"postMetadata\") === null) {\n  const resourceList = resources.list;\n  for (let rs of resourceList) {\n    require(`@/assets/resources/${rs}`);\n  }\n}\n\ncreateApp(App).use(router).use(store).mount(\"#app\");\n","var map = {\n\t\"./cache-tp77vm\": 69577,\n\t\"./cache-tp77vm.js\": 69577,\n\t\"./code-theme-css-ef37e5d9\": 57495,\n\t\"./code-theme-css-ef37e5d9.js\": 57495,\n\t\"./resources\": 25217,\n\t\"./resources.js\": 25217\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 23052;","module.exports = Vue;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + \"about\" + \"-legacy.\" + \"cb8dd184\" + \".js\";\n};","// This function allow to reference all chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"css/\" + {\"143\":\"app\",\"443\":\"about\",\"998\":\"chunk-vendors\"}[chunkId] + \".\" + {\"143\":\"ebf92b12\",\"443\":\"82a195f9\",\"998\":\"69f5aa04\"}[chunkId] + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"youyinnn.github.io:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/dist/\";","var createStylesheet = function(chunkId, fullhref, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + realHref + \")\");\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tlinkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\tdocument.head.appendChild(linkTag);\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"443\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkyouyinnn_github_io\"] = self[\"webpackChunkyouyinnn_github_io\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(90370); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["sessionStorage","setItem","resourcesList","module","exports","list","theme","class","bordered","Component","name","mode","style","justify","value","tabValue","type","size","tabs","tab","key","goTo","text","placement","trigger","delay","ghost","icon","themeValue","themeSwitchHandle","checked","unchecked","codeThemeValue","options","codeThemeOptions","codeThemeSelectHandle","tag","href","target","tabList","route","components","NCard","NTabs","NTab","NSpace","NGradientText","NIcon","BrandGithub","NButton","NTooltip","NSwitch","NSelect","data","adjustTimer","document","label","methods","this","$store","commit","$router","push","catch","getPageWidth","pageEl","getElementsByClassName","length","clientWidth","getWinWidth","winWidth","window","innerWidth","body","adjustTabWidth","width","darkTheme","codeTheme","state","currentThemeConfig","computed","currentTab","mounted","clearTimeout","setTimeout","onresize","undefined","screen","orientation","onchange","onorientationchange","codeThemeCssFile","JSON","parse","codeThemeCss","codeThemeCssFileList","cssFile","__exports__","dark","TopBar","NConfigProvider","NGlobalStyle","pre","getElementById","remove","render","VueRouter","routes","path","component","router","createRouter","history","createWebHistory","Vuex","pathName","location","pathname","initialRoute","startsWith","initialCurrentThemeConfig","localStorage","getItem","createStore","mutations","tabChange","payload","changeThemeConfig","stringify","actions","modules","resourceList","resources","rs","require","createApp","App","use","store","mount","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Vue","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","definition","defineProperty","enumerable","get","f","chunkId","Promise","all","reduce","promises","u","miniCssF","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","url","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","doneFns","parentNode","removeChild","forEach","bind","head","appendChild","Symbol","toStringTag","p","createStylesheet","fullhref","reject","linkTag","rel","onLinkComplete","errorType","realHref","err","request","findStylesheet","existingLinkTags","dataHref","existingStyleTags","loadStylesheet","installedCssChunks","miniCss","cssChunks","then","installedChunks","installedChunkData","promise","error","loadingEnded","realSrc","message","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}