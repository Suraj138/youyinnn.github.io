<hr>
<p>title: 算法回收站
categories:</p>
<ul>
<li>note</li>
<li>algorithm
comments: true
date: 2018-08-11 13:41:10
tags:</li>
<li>algorithm</li>
</ul>
<hr>
<h3 id="前言">前言</h3>
<p>这篇记录下从今天开始，复习到、新遇到的所有算法题</p>
<ul>
<li>栈相关</li>
<li>数学逻辑相关</li>
</ul>
<hr>
<h4 id="栈相关">栈相关</h4>
<h5 id="汉诺塔（递归方法）">汉诺塔（递归方法）</h5>
<h6 id="c语言实现">C语言实现</h6>
<pre><code class="language-c">void hanoi(int n, char source, char help, char target) {
    // 讲塔座上按照直径大小自上而下编号为1到n的n个圆盘按规则搬到塔座target上，help做辅助塔
    if (n == 1) {
        move(source, 1, target);
    } else {
        hanoi(n-1, source, target, help);    // 将要搬离的n个盘中的前n-1个盘搬到help塔上，用target塔为辅助
        move(source, n, target);            // 将编号为n的盘移动到target塔上
        hanoi(n-1, help, source, target);    // 将之前的放在help塔上的n-1个盘移动到target塔，用souece塔做辅助塔
    }
}

void move(char source, int n, char target){
    // 将source塔上的盘子n搬到target塔上，移动步数加1（设置为全局变量）
    printf(&quot;Step: %i. Move disk %i from %c to %c\n&quot;, ++stepCount, n, x, z);
}</code></pre>
<blockquote>
<p>参考：《数据结构（C语言版）》——严蔚敏. P55</p>
</blockquote>
<hr>
<h4 id="数学逻辑相关">数学逻辑相关</h4>
<h5 id="有理数的循环节">有理数的循环节</h5>
<blockquote>
<p>两次看到这题，第一次是在某年蓝桥杯上，第二次就是昨天（2018年9月10日）的快手笔试。如出一辙，分码未写。</p>
<p>1/7 = 0.142857142... 是个无限循环小数。任何有理数都可以表示为无限循环小数的形式。本题目要求即是：给出一个数字的循环小数表示法。</p>
<p>例如：</p>
<p>输入：
1,5</p>
<p>则输出：
0.2</p>
<p>输入：
1,7</p>
<p>则输出：</p>
<p>0.[142857]</p>
<p>输入：</p>
<p>7,6</p>
<p>则输出:</p>
<p>1.1[6]</p>
<p>用户输入的格式是：</p>
<p>整数,整数</p>
<p>每个整数范围均为：1~1000</p>
<p>程序输出两个整数做除法产生的小数或无限循环小数（循环节用方括号括起）。</p>
</blockquote>
<p>这题.....真是纯数学题，你要是不懂怎么判断循环节，那就凉了，然后就求循环嘛，然后又发现一个很尴尬的事情，余数不会求....折腾了大半天，搞定- -</p>
<p>首先我们手算3个例子，1/4和1/7和1/6</p>
<p><img src="https://image.youyinnn.top/20180912111445.png" alt=""></p>
<p>我们每次计算的时候，<strong>都需要将余数乘以10，再和除数取余，再进行下一轮计算，直到余数为0或者余数重复出现为止，与此同时我们可以记录每一轮的商</strong>；</p>
<p>比如1/4，余数是1，<code>(1*10)%4=2</code>，再继续<code>(2*10)%4=0</code>，算到0就可以截止了</p>
<p>1/7，余数是1，<code>(1*10)%7=3</code>，<code>(3*10)%7=2</code>，<code>(2*10)%7=6</code>，<code>(6*10)%7=4</code>，<code>(4*10)%7=5``(5*10)%7=1</code>，又碰到一样的余数了，说明下一轮得到的商之前是已经求出来过的，所以已经找到循环节了；</p>
<h6 id="java实现">Java实现</h6>
<pre><code class="language-java">// resulet : k.(m1m2m3m4...mn)
private static String getRepetend(int a, int b) {
    int k = a / b;
    a = a % b;
    StringBuilder msb = new StringBuilder();
    msb.append(&quot;.&quot;);
    while (true) {
        int mi = (a * 10) / b;
        a = (a * 10) % b;
        int index = msb.indexOf(mi + &quot;&quot;);
        if (index != -1) {
            msb.insert(index, &quot;(&quot;);
            break;
        }
        msb.append(mi);
        if (a == 0) {
            break;
        }
    }
    msb.insert(0, k);
    if (msb.indexOf(&quot;(&quot;) != -1) {
        msb.append(&quot;)&quot;);
    }
    return msb.toString();
}</code></pre>
